import { Models as ModelsApp } from "mrmkmcib-app";
import { Enums } from '../Enums';
import { Models } from "mrmkmcib-crm";
import * as ModelsAgent from "../models/ModelsAgent";
import Error from "../models/Error";
export interface IStateProps {
    currentAgent: Models.Agent;
    agentMode: Enums.AgentMode;
    inputFirstName: string;
    inputLastName: string;
    inputMiddleName: string;
    inputSearchJobPosition: string;
    inputJobPosition: string;
    inputWorkPhone: string | null;
    inputMobilePhone: string | null;
    inputEmail: string;
    inputBirthday: Date | null;
    inputGender: Enums.GenderList;
    inputRelationType: ModelsApp.Classifier;
    inputComment: string;
    agentValidationErrorList: number[];
    operationUuid: string;
    agentCreateFetching: boolean;
    agentCreateError: Error | null;
    currentAgentModifierId: Models.Agent;
    currentAgentModifierIdFetching: boolean;
    currentAgentModifierIdError: Error | null;
    currentAgentModifierIdCachedDate: Date | null;
    agentUpdateFetching: boolean;
    agentUpdateError: Error | null;
    agentUpdateCachedDate: Date | null;
    currentAgentFetching: boolean;
    currentAgentError: Error | null;
    currentAgentCachedDate: Date | null;
    classifierDictionary: ModelsApp.ClassifierDictionary;
    currentCustomerManaged: Models.CustomerManaged | null;
    agentContextMode: Enums.AgentContextMode;
    inputOccasionList: Models.OccasionList;
    inputNoteList: Models.NoteList;
    isVisibleAgentErrorModalWindow: boolean;
    inputMemberList: Models.MemberList | null;
    isCommentEdit: boolean;
    newAgentComment: string;
}
export interface IDispatchProps {
    performSendEmail: ModelsAgent.PERFORM_SEND_EMAIL;
    performSchedulerOpen: ModelsAgent.PERFORM_SCHEDULER_OPEN;
    performInputFirstName: ModelsAgent.PERFORM_INPUT_FIRST_NAME;
    performInputLastName: ModelsAgent.PERFORM_INPUT_LAST_NAME;
    performInputMiddleName: ModelsAgent.PERFORM_INPUT_MIDDLE_NAME;
    navigateToJobPickerScreen: ModelsAgent.NAVIGATE_TO_JOB_PICKER_SCREEN;
    performInputJobPosition: ModelsAgent.PERFORM_INPUT_JOB_POSITION;
    performInputSearchJobPosition: ModelsAgent.PERFORM_INPUT_SEARCH_JOB_POSITION;
    performInputWorkPhone: ModelsAgent.PERFORM_INPUT_WORK_PHONE;
    performInputMobilePhone: ModelsAgent.PERFORM_INPUT_MOBILE_PHONE;
    performInputEmail: ModelsAgent.PERFORM_INPUT_EMAIL;
    performInputBirthday: ModelsAgent.PERFORM_INPUT_BIRTHDAY;
    performInputGender: ModelsAgent.PERFORM_INPUT_GENDER;
    navigateToRelationTypePickerScreen: ModelsAgent.NAVIGATE_TO_RELATION_TYPE_PICKER_SCREEN;
    performInputRelationType: ModelsAgent.PERFORM_INPUT_RELATION_TYPE;
    performInputComment: ModelsAgent.PERFORM_INPUT_COMMENT;
    performSave: ModelsAgent.PERFORM_SAVE;
    performGetUncachedAgent: ModelsAgent.PERFORM_GET_UNCACHED_AGENT;
    performEdit: ModelsAgent.PERFORM_EDIT;
    performCancel: ModelsAgent.PERFORM_CANCEL;
    navigateToOccasionList: ModelsAgent.NAVIGATE_TO_OCCASION_LIST;
    navigateToNoteList: ModelsAgent.NAVIGATE_TO_NOTE_LIST;
    performSaveAgentComment: ModelsAgent.PERFORM_SAVE_AGENT_COMMENT;
    navigateToAgentComment: ModelsAgent.NAVIGATE_TO_AGENT_COMMENT;
    performSetAgentCommentEditStatus: ModelsAgent.PERFORM_SET_AGENT_COMMENT_EDIT_STATUS;
    navigateToAgentCustomerPositionListScreen: ModelsAgent.NAVIGATE_TO_AGENT_CUSTOMER_POSITION_LIST_SCREEN;
    navigateBack: ModelsAgent.NAVIGATE_BACK;
    performOpenCustomerScreen: ModelsAgent.PERFORM_OPEN_CUSTOMER_SCREEN;
    performInit: ModelsAgent.PERFORM_AGENT_SCREEN_INIT;
    performCreateActivityAccessRequest: ModelsAgent.PERFORM_CREATE_ACTIIVTY_ACCESS_REQUEST;
    performChangeDisplayAgentErrorModalWindow: ModelsAgent.PERFORM_CHANGE_DISPLAY_AGENT_ERROR_MODAL_WINDOW;
    performCallGetAgent: ModelsAgent.PERFORM_CALL_GET_AGENT;
    performCallPostAgentCreate: ModelsAgent.PERFORM_CALL_POST_AGENT_CREATE;
    performCallPutAgentUpdate: ModelsAgent.PERFORM_CALL_PUT_AGENT_UPDATE;
    navigateToMemberList: ModelsAgent.NAVIGATE_TO_MEMBER_LIST;
    hasChangedAgentPersonData: boolean;
}
export declare type IAgentProps = IStateProps & IDispatchProps & {
    testID: string;
};
declare const _default: any;
export default _default;
