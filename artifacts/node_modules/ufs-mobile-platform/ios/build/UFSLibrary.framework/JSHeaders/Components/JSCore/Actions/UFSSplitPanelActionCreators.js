import { createAction } from 'redux-actions';
import { POP_ACCESSORY, PUSH_ACCESSORY, POP_CONTENT, PUSH_CONTENT, POP_CONTENT_TO_TOP, POP_ACCESSORY_TO_TOP, POP_CONTENT_TO_PAGE, POP_ACCESSORY_TO_PAGE } from '../Constants/ActionTypes';
/**
 * Осуществляет переход на следующую страницу `ContentPanel`.
 *
 * Параметр `nextPageId` - это номер следующей страницы,
 * `panelId` - это идентификатор `SplitPanel`,
 * `pagePayload` - объект типа `IPagePayload`.
 */
export const pushContent = createAction(PUSH_CONTENT, (nextPageId, panelId, pagePayload) => {
    return ({
        id: nextPageId,
        panelId,
        pagePayload
    });
});
/**
 * Осуществляет переход на следующую страницу `AccessoryPanel`.
 *
 * Параметр `nextPageId` - это номер следующей страницы(индекс `Page` в списке `children` у `AccessoryPanel`),
 * `panelId` - это идентификатор `SplitPanel`, в которой находится `AccessoryPanel`,
 * `pagePayload` - объект типа `IPagePayload` (опциональный параметр).
 */
export const pushAccessory = createAction(PUSH_ACCESSORY, (nextPageId, panelId, pagePayload) => {
    return ({
        id: nextPageId,
        panelId,
        pagePayload
    });
});
/**
 * Осуществляет переход на предыдущую страницу `ContentPanel`.
 *
 * Параметр `panelId` - это идентификатор `SplitPanel`, в которой находится `ContentPanel`.
 */
export const popContent = createAction(POP_CONTENT, (panelId) => {
    return ({
        panelId
    });
});
/**
 * Осуществляет переход на предыдущую страницу `AccessoryPanel`.
 *
 * Параметр `panelId` - это идентификатор `SplitPanel`, в которой находится `AccessoryPanel`.
 */
export const popAccessory = createAction(POP_ACCESSORY, (panelId) => {
    return ({
        panelId
    });
});
/**
 * Осуществляет переход на первую страницу `ContenPanel`.
 *
 * Параметр `panelId` - это идентификатор `SplitPanel`, в которой находится `ContentPanel`.
 */
export const popContentToTop = createAction(POP_CONTENT_TO_TOP, (panelId) => {
    return ({
        panelId
    });
});
/**
 * Осуществляет переход на первую страницу `AccessoryPanel`.
 *
 * Параметр `panelId` - это идентификатор `SplitPanel`, в которой находится `AccessoryPanel`.
 */
export const popAccessoryToTop = createAction(POP_ACCESSORY_TO_TOP, (panelId) => {
    return ({
        panelId
    });
});
/**
 * Осуществляет переход на конкретную страницу `ContentPanel` по ключу.
 *
 * Параметр `panelId` - это идентификатор `SplitPanel`, в которой находится `ContentPanel`,
 * `pageKey` - ключ конкретной страницы в стеке страниц.
 */
export const popContentToPage = createAction(POP_CONTENT_TO_PAGE, (panelId, pageKey) => {
    return ({
        panelId,
        pageKey
    });
});
/**
 * Осуществляет переход на конкретную страницу `AccessoryPanel` по ключу.
 *
 * Параметр `panelId` - это идентификатор `SplitPanel`, в которой находится `AccessoryPanel`,
 * `pageKey` - ключ конкретной страницы в стеке страниц.
 */
export const popAccessoryToPage = createAction(POP_ACCESSORY_TO_PAGE, (panelId, pageKey) => {
    return ({
        panelId,
        pageKey
    });
});
//# sourceMappingURL=UFSSplitPanelActionCreators.js.map