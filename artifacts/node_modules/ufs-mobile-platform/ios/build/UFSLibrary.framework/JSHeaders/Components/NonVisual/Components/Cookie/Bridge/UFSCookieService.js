import { NativeModules } from 'react-native';
const CookieService = NativeModules.UFSCookieServiceBridge;
/**
 * Библиотека компонентов реализует автоматическую работу с HTTP-cookie:
 * + При обращении к серверу и получении от него cookie-данных эти данные сохраняются в локальном хранилище.
 * + При формировании запроса к серверу cookie-информация автоматически добавляется в заголовок запроса и отправляется на сервер согласно правилам применения cookie.
 *
 * Библиотека компонентов предоставляет возможность получения информации, которая находится в локальном cookie-хранилище.
 * @category Nonvisual
 */
export default class UFSCookieService {
    /**
     * Метод возвращает всю информацию, которая находится в cookie-хранилище приложения.
     *
     * #### Обратите внимание
     * На текущий момент метод возвращает массив объектов, которые не соответствуют интерфейсу `CookieData`!
     *
     * Возвращаемые объекты содержат следующие поля:
     * + `Created?: number;`
     * + `Domain?: string;`
     * + `Expires?: string;`
     * + `Name?: string;`
     * + `Path?: string;`
     * + `Value?: string;`
     *
     * Пример значений:
     * + `Created: 542898560`
     * + `Domain: ".yandex.ru"`
     * + `Expires: "2028-03-13T16:09:20+03:00"`
     * + `Name: "yandexuid"`
     * + `Path: "/"`
     * + `Value: "8320232511521205760"`
     *
     * Все возможные свойства объекта `cookie` перечислены [здесь](https://developer.apple.com/documentation/foundation/nshttpcookiepropertykey?language=objc).
     *
     * **Входные параметры:**
     * - `callback` - функция, в качестве параметра которой будет передан массив `cookie`.
     *
     * **Возвращаемые значения:**
     * отсутствуют
     * @static
     */
    static get(callback) {
        return CookieService.getCookie(callback);
    }
}
//# sourceMappingURL=UFSCookieService.js.map