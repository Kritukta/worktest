import { Coordinate } from '../../../../JSCore';
/**
 *  + `apiKey` - Ключ платной версии Яндекс-Карт. Физически является опциональным, но по лицензии яндекс-карт ключ обязательный. Подробнее об условиях использования API Яндекс-Карт можно узнать на [официальном сайте](https://tech.yandex.ru/maps/doc/jsapi/2.1/terms/index-docpage/?from=geocoder#conditions).
 *  + `resultsLimit` - Максимальное количество возвращаемых результатов метода `geocode`, по умолчанию 10. Максимальное значение 100.
 */
export interface GeocoderConfig {
    apiKey?: string;
    resultsLimit?: number;
}
/**
 * Сервис предоставляет набор методов для выполнения прямого и обратного геокодирования.
 * Геокодирование происходит путем обращения к геокодеру Яндекса (с помощью выполнения https запроса).
 *
 * Компонент является синглтоном для всех js-бандлов.
 * @category Nonvisual
 */
export default class UFSGeocoderService {
    /**
     * Метод позволяет задать базовые настройки для работы с сервисом геокодирования Яндекса.
     * Время жизни заданных настроек ограничено временем жизни приложения, т.е при каждом новом запуске приложения данные настройки необходимо задавать заново.
     *
     * **Входные параметры:**
     * - `config` - объект конфигурации
     *
     * **Возвращаемые значения:**
     * - Promise - JS-объект типа Promise с состояниями:
     *   - `resolve()` - операция завершена успешно, сервис по работе с геокодированием Яндекса сконфигурирован
     *   - `rejected(error: UFSError)` - операция завершилась неудачно. Возможные коды ошибок:
     *     - `UFSMapErrorCodeNoLocationsForAddress` - геокодер не смог определить координаты точки по адресу;
     *     - `UFSMapErrorCodeGeocodingFailed` - не удалось произвести операцию геокодирования.
     * @static
     */
    static configure(config: GeocoderConfig): Promise<void>;
    /**
     * Метод выполняет прямое или обратное геокодирование.
     *
     * Полученные результаты геокодирования кэшируются на время жизни приложения.
     * ##### Обратите внимание
     * В случае превышения суточного лимита запросов вместо результатов геокодирования сервис вернет ошибку с сетевым кодом 429.
     *
     * ##### Тип возвращаемого значения
     * Тип результатов зависит от вида геокодирования.
     * При прямом геокодировании возвращается массив, содержащий элементы следующего вида:
     * ```
     * {
     *     "lat": "number",
     *     "lng": "number"
     * }
     * ```
     * При обратном геокодировании возвращается массив, содержащий элементы следующего вида:
     * ```
     * {
     *    address: {
     *        "type": "object",
     *        "properties": {
     *            "country_code": "string",
     *            "postal_code": "string",
     *            "text": "string",
     *            "country": "string",
     *            "province": {
     *                "type": "array",
     *                "items": {
     *                    "type":  "string"
     *                }
     *            }
     *            "locality": "string",
     *            "street": "string",
     *            "house": "string
     *        }
     *    },
     *    coordinates: {
     *        "type": "object",
     *        "properties": {
     *            "lng": "number",
     *            "lat": "number"
     *        }
     *    }
     * }
     * ```
     *
     * **Входные параметры:**
     * - `address` - Адрес для которого необходимо провести геокодирование. Может быть двух типов:
     *   - string: прямое геокодирование по адресу
     *   - Coordinate: обратное геокодирование по координате
     *
     * **Возвращаемые значения:**
     * - Promise - JS-объект типа Promise с состояниями:
     *   - `resolve(results: any)` - операция завершена успешно. В блок `resolve` передаются результаты геокодирования.
     *   - `rejected(error: UFSError)` - операция завершилась неудачно. Возможные коды ошибок:
     *     - `UFSMapErrorCodeNoLocationsForAddress` - при отсутствии результатов геокодирования (прямого или обратного);
     *     - `UFSMapErrorCodeGeocodingFailed` - при невалидном ответе геокодера яндекса;
     *     - Вложенный `NSError`.
     * @static
     */
    static geocode(address: string | Coordinate): Promise<any>;
    /**
     * Метод очищает кэш результатов геокодирования из оперативной памяти.
     * Следует учитывать, что кэш результатов геокодирования может очиститься не только благодаря этому методу: ОС при нехватке оперативной памяти может очистить кэш автоматически.
     *
     * **Входные параметры:**
     * отсутствуют
     *
     * **Возвращаемые значения:**
     * отсутствуют
     * @static
     */
    static flush(): void;
}
