/// <reference types="react" />
import React from 'react';
/**
 * + `totalSize` - объем локального хранилища в байтах.
 * + `freeSize` - размер свободного места в байтах.
 */
export interface DiskSize {
    totalSize: number;
    freeSize: number;
}
/**
 * Компонент предоставляет следующие возможности:
 * + Подписка на события жизненного цикла iOS-приложения;
 * + Вызов методов для взаимодействия с операционной системой iOS.
 * @category Nonvisual
 */
export default class UFSSysCalls extends React.Component<{}, {}> {
    private static subscriptions;
    /**
     * Метод предоставляет возможность получения информации об объёме локального хранилища устройства и размере свободного места.
     *
     * **Входные параметры:**
     * - `callback` - функция вызывается по итогам работы метода. В качестве параметра ей будет передан результат его работы.
     *
     * **Возвращаемые значения:**
     * отсутствуют
     * @static
     */
    static getDiskSize(callback: (size: DiskSize) => void): void;
    /**
     * Метод предоставляет возможность открытия ресурса с определённым URL.
     * Поддерживается множество распространенных URL схем, например, `http`, `https`, `facetime`,`mailto`
     * (подробнее можно посмотреть [здесь](https://developer.apple.com/library/content/featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007899))
     *
     * #### Обратите внимание
     * Данный метод просто переадресует вызов к методу iOS
     * [openURL:](https://developer.apple.com/documentation/uikit/uiapplication/1622961-openurl?language=objc).
     * Вся ответственность за открытие или неоткрытие ресурса лежит на операционной системе.
     *
     * **Входные параметры:**
     * - `url` - URL ресурса, который следует открыть.
     *
     * **Возвращаемые значения:**
     * - Promise - JS-объект типа Promise с состояниями:
     *   - `resolve(success: string)` - операция завершена успешно. В качестве параметра блоку передаётся строка со значением `Success`.
     *   - `rejected(error: UFSError)` - операция завершилась неудачно. Возможные коды ошибок:
     *       - `UFSSysCallsErrorCodeOpenExternalLinkFail`
     * @static
     */
    static openExternalLink(url: string): Promise<string>;
    /**
     * Метод позволяет подписаться на событие `applicationWillEnterForeground`.
     *
     * Событие срабатывает, когда iOS-приложение собирается переходить из фонового состояния в активное.
     * Данное событие можно использовать, чтобы отменить изменения, сделанные при переходе в фоновое состояние.
     * После этого события происходит событие `applicationDidBecomeActive`.
     *
     * **Входные параметры:**
     * - `callback` - функция, которая будет вызвана при срабатывании события `applicationWillEnterForeground`.
     *
     * **Возвращаемые значения:**
     * - number - идентификатор подписки.
     * @static
     */
    static subscribeOnWillEnterForeground(callback: () => void): number;
    /**
     * Метод позволяет подписаться на событие `applicationWillTerminate`.
     *
     * Событие срабатывает перед тем, как iOS-приложение будет завершено и полностью очищено из памяти.
     * Это событие можно использовать, чтобы произвести заключительную чистку приложения
     * (сохранение данных, освобождение общих ресурсов).
     * Системой накладывается ограничение на время выполнения данного метода (приблизительно 5 секунд).
     * В случае превышения допустимого времени система может принудительно завершить процесс.
     *
     * **Входные параметры:**
     * - `callback` - функция, которая будет вызвана при срабатывании события `applicationWillTerminate`.
     *
     * **Возвращаемые значения:**
     * - number - идентификатор подписки.
     * @static
     */
    static subscribeOnWillTerminate(callback: () => void): number;
    /**
     * Метод позволяет подписаться на событие `applicationDidBecomeActive`.
     *
     * Событие срабатывает, когда iOS-приложение перешло из фонового состояния в активное.
     * Например, данный переход может происходить, когда приложение было запущено пользователем или системой, а также
     * когда пользователь отменил входящий звонок (входящий звонок или SMS временно переводят приложение в неактивное состояние).
     *
     * **Входные параметры:**
     * - `callback` - функция, которая будет вызвана при срабатывании события `subscribeOnDidBecomeActive`.
     *
     * **Возвращаемые значения:**
     * - number - идентификатор подписки.
     * @static
     */
    static subscribeOnDidBecomeActive(callback: () => void): number;
    /**
     * Метод позволяет подписаться на событие `applicationDidEnterBackground`.
     *
     * Событие срабатывает, когда iOS-приложение перешло в фоновое состояние.
     *
     * Системой накладывается ограничение на время выполнения данного метода (приблизительно 5 секунд).
     * В случае превышения допустимого времени система может принудительно завершить процесс.
     *
     * **Входные параметры:**
     * - `callback` - функция, которая будет вызвана при срабатывании события `applicationDidEnterBackground`.
     *
     * **Возвращаемые значения:**
     * - number - идентификатор подписки.
     * @static
     */
    static subscribeOnDidEnterBackground(callback: () => void): number;
    /**
     * Метод позволяет подписаться на событие `applicationDidReceiveMemoryWarning`.
     *
     * Событие срабатывает, когда iOS-приложение исчерпывает выделенное ему системой количество оперативной памяти.
     * После получения данного события следует освободить неиспользуемые ресурсы.
     * Система может завершить приложение, если не получит достаточно памяти.
     *
     * **Входные параметры:**
     * - `callback` - функция, которая будет вызвана при срабатывании события `applicationDidReceiveMemoryWarning`.
     *
     * **Возвращаемые значения:**
     * - number - идентификатор подписки.
     * @static
     */
    static subscribeOnDidReceiveMemoryWarning(callback: () => void): number;
    /**
     * Метод позволяет отказаться от подписки с определённым идентификатором.
     *
     * **Входные параметры:**
     * - `id` - идентификатор подписки, от которой следует отказаться.
     *
     * **Возвращаемые значения:**
     * отсутствуют
     * @static
     */
    static unsubscribe(id: number): void;
    /**
     * @private
     * @static
     */
    private static subscribeOnEvent;
}
