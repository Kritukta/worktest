/// <reference types="react" />
import { Component, ReactNode } from 'react';
/**
 * + `title` - наименование шага;
 * + `accessible` - доступность шага для выбора. При значении `false` данный шаг не будет вызывать функцию `onNavigate`;
 * + `data` - дополнительная информация о шаге в произольном формате. Опциональна;
 * + `key` - уникальный ключ шага. Сравнивается со свойством `selectedKey`.
 */
export interface HistoryItem {
    title?: string;
    accessible?: boolean;
    data?: any;
    key?: string;
}
export interface BreadcrumbsEvent {
    nativeEvent: {
        value?: HistoryItem;
    };
}
export interface Props {
    /**
     * Ключ выбранного шага.
     */
    selectedKey?: string;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * Дочерние компоненты не поддерживаются.
     * @private
     */
    children?: ReactNode;
}
export interface PublicProps extends Props {
    /**
     * История операций. Формат: двумерный массив HistoryItem.
     * Компонент «Хлебные крошки» отображает элементы последнего подмассива, которые соответствуют текущему процессу.
     */
    history?: HistoryItem[][];
    /**
     * Функция вызывается при переключении шагов. В аргументе передается `HistoryItem`, на который произойдет переключение.
     */
    onNavigate?: (item: HistoryItem) => void;
}
export interface PrivateProps extends Props {
    history?: HistoryItem[];
    onNavigate?: (item: BreadcrumbsEvent) => void;
}
/**
 * Компонент используется для отображения выполненных пользователем шагов операции и возврата к любому из них для изменения введённой информации.
 * Каждый шаг процесса состоит из наименования ключевого элемента, флага доступности и его уникального ключа.
 * Отображаются только все шаги текущего процесса. Это означает, что из двумерного массива, который вы передаёте в параметре `history`,
 * в хлебных крошках будут отображаться элементы последнего подмассива.
 * @category Visual/Breadcrumbs
 */
export default class UFSBreadcrumbsManager extends Component<PublicProps, {}> {
    onNavigate: (event: BreadcrumbsEvent) => void;
    lastHistory: () => HistoryItem[];
    render(): JSX.Element;
}
