/// <reference types="react-native" />
/// <reference types="react" />
import { Component, ReactNode } from 'react';
import { ViewStyle } from 'react-native';
import { CommonInputProps, TextInputProps, FocusInputProps, KeyboardInputProps } from '../../../../JSCore';
export interface ComboBoxEvent {
    nativeEvent: {
        value?: string;
    };
}
export interface Props extends CommonInputProps, FocusInputProps, KeyboardInputProps {
    /**
     * Отображает индикатор загрузки в области контента.
     */
    loading?: boolean;
    /**
     * Стили React.
     */
    style?: ViewStyle;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * Атрибут определяет вид разделителя. Допустимые значения содержатся в справочнике `UnderlineType`:
     * - `FULL` - разделитель будет во всю ширину компонента без отступов;
     * - `MARGINS` (значение по умолчанию) - отступ слева будет совпадать с отступом контента;
     * - `NONE` - разделитель отсутствует.
     */
    underlineType?: number;
    /**
     * Дочерние компоненты могут быть следующих типов:
     * - `Table`
     * - `HintIcon`(к компоненту будет применено автоматическое позиционирование)
     */
    children?: ReactNode;
}
export interface PublicProps extends Props, TextInputProps {
}
export interface PrivateProps extends Props {
    onChange?: (event: ComboBoxEvent) => void;
}
/**
 * Компонент представляется текстовым полем для ввода,
 * при вводе текста в которое пользователю отображается список с возможными вариантами для выбора.
 * <br/><br/>
 * Предназначен для предоставления пользователю отфильтрованного списка,
 * сформированного на основе значения, введенного в текстовое поле.
 * Позволяет пользователю выбрать значение из списка, а также ввести его самостоятельно.
 * ##### Размещение
 * При размещении в платформенных контейнерах(`SplitPanel`, `Popover`) будет
 * работать функция автоматического скролла при появлении и скрытии клавиатуры.
 *
 * <br/>
 *
 * __Known issues:__ `ComboBox` не работает внутри `Popover`, либо других всплывающих форм,
 * приводящих к показу нативного модального окна или поповера.
 *
 * ##### Методы
 * 1. dismissKeyboard()
 *
 * <br/>
 *
 * Принудительно скрывает клавиатуру.
 * @category Visual/Input
 */
export default class UFSComboBoxManager extends Component<PublicProps, {}> {
    onChange: (event: ComboBoxEvent) => void;
    /**
     * Принудительно скрывает клавиатуру.
     */
    dismissKeyboard: () => void;
    private childenWithoutHintIcons();
    render(): JSX.Element;
}
