/// <reference types="react-native" />
/// <reference types="react" />
import React, { Component, ReactNode } from 'react';
import { ViewStyle } from 'react-native';
export interface StateProps {
    /**
     * @private
     * Флаг видимости компонента.
     */
    visible?: boolean;
}
export interface OwnProps {
    /**
     * Вид подсказки из словаря HintType. Доступные значения:
     * - `NEWBIE` - стандартная зеленая кнопка;
     * - `NORMAL` - кнопка выполнения операции.
     */
    type: number;
    /**
     * Код подсказки из workflow.
     */
    code: string;
    /**
     * @private
     * Стили React.
     */
    style?: ViewStyle;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * @private
     */
    children?: ReactNode;
    /**
     * Текст подсказки.
     */
    text?: string;
}
export interface Props extends StateProps, OwnProps {
}
export declare const UFSHintType: any;
/**
 * Компонент используется для отображения подсказок процесса.
 *
 * Блок с подсказками занимает всю ширину панели.
 *
 * Внутри компонента может быть отображён только простой текст.
 *
 * Возможны два вида подсказок: один — для новичков, другой, менее отвлекающий внимание, — для остальных.
 *
 * #### Ограничение
 * При одновременно заданных свойствах `code` и `text` будет использоваться свойство `code`.
 * @category Visual
 */
export declare class UFSHintManager extends Component<Props, {}> {
    render(): JSX.Element;
}
declare var _default: React.ComponentClass<any>;
export default _default;
