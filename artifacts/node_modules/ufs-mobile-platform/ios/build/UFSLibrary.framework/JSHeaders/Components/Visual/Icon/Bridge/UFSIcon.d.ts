/// <reference types="react-native" />
/// <reference types="react" />
import { Component, ReactNode } from 'react';
import { ViewStyle } from 'react-native';
export declare const UFSIconType: any;
export interface Props {
    /**
     * Тип иконки из словаря IconType. Доступные значения:
     * - `MrmAdd`
     * - `MrmArrowDown`
     * - `MrmArrowUp`
     * - `MrmBack`
     * - `MrmBell`
     * - `MrmBookmarkOff`
     * - `MrmBookmarkOn`
     * - `MrmBrick`
     * - `MrmCalendar`
     * - `MrmCamera`
     * - `MrmChat`
     * - `MrmCheckboxMinus`
     * - `MrmCheckboxOff`
     * - `MrmCheckboxOn`
     * - `MrmClear`
     * - `MrmClose`
     * - `MrmComboChart`
     * - `MrmCopy`
     * - `MrmCrown`
     * - `MrmDirectspeech`
     * - `MrmDone`
     * - `MrmDownload`
     * - `MrmDrag`
     * - `MrmEdit`
     * - `MrmFavorite`
     * - `MrmFavorited`
     * - `MrmFilter`
     * - `MrmHamburger`
     * - `MrmHint`
     * - `MrmInfo`
     * - `MrmKebab`
     * - `MrmLink`
     * - `MrmLock`
     * - `MrmMail`
     * - `MrmMan`
     * - `MrmMap`
     * - `MrmMeatball`
     * - `MrmMinus`
     * - `MrmPhone`
     * - `MrmPin`
     * - `MrmPlus`
     * - `MrmPrint`
     * - `MrmQRCode`
     * - `MrmRadiobuttonOff`
     * - `MrmRadiobuttonOn`
     * - `MrmRefresh`
     * - `MrmSearch`
     * - `MrmShare`
     * - `MrmTime`
     * - `MrmTrash`
     * - `MrmTrophy`
     * - `MrmWarning`
     * - `SpecialCardAmex`
     * - `SpecialCardGeneric`
     * - `SpecialCardMaestro`
     * - `SpecialCardMaster`
     * - `SpecialCardMir`
     * - `SpecialCardPro100`
     * - `SpecialCardUek`
     * - `SpecialCardVisa`
     * - `SpecialDepositGeneric`
     * - `SpecialDocsDoc`
     * - `SpecialDocsGeneric`
     * - `SpecialDocsImg`
     * - `SpecialDocsPdf`
     * - `SpecialDocsXls`
     * - `SpecialStatusBell`
     * - `SpecialStatusCall`
     * - `SpecialStatusFlag`
     * - `SpecialStatusMeet`
     * - `SpecialStatusNew`
     * - `SpecialStatusNewFlag`
     * - `SpecialStatusPin`
     *
     * Отдельную группу составляет набор иконок, доступный только для использования в боковой панели стартового компонента.
     * Чтобы отобразить иконку на панели стартового компонента, нужно в настройках jsbundl'а присвоить имя иконки в качестве значения свойства `icon`.
     * Доступные значения:
     * - `calendar`
     * - `clients`
     * - `dashboard`
     * - `geomonitoring`
     * - `kpi`
     * - `library`
     * - `log`
     * - `materials`
     * - `news`
     * - `notes`
     * - `notification_red`
     * - `notification_regular`
     * - `process`
     * - `ratelocation`
     * - `ratings`
     * - `sales`
     * - `sandbox`
     * - `school`
     * - `search`
     * - `sos`
     * - `telecom`
     * - `todo`
     * - `user`
     * - `videopresentation`
     *
     * По умолчанию или при неправильном значении свойства `icon` будет использована иконка-заглушка.
     */
    type: number;
    /**
     * Переводит иконку в заблокированное состояние, изменяя цвет иконки.
     */
    disabled?: boolean;
    /**
     * Цвет иконки. Иконки с типом `Special` игнорируют этот параметр. В качестве значения может принимать цвета из интерфейса `Colors`:
     * - `white`
     * - `grey200`
     * - `grey300`
     * - `grey400`
     * - `grey500`
     * - `grey600`
     * - `grey700`
     * - `grey800`
     * - `primary`
     * - `green200`
     * - `red700`
     * - `orange700`
     * - `blue700`
     * - `grey100`
     * - `grey900`
     * - `blue500`
     * - `blue300`
     */
    color?: string;
    /**
     * Стили React.
     */
    style?: ViewStyle;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * Дочерние компоненты не поддерживаются.
     */
    children?: ReactNode;
}
/**
 * Используется для размещения иконки на странице.
 * @category Visual
 */
export default class UFSIconManager extends Component<Props, {}> {
    render(): JSX.Element;
}
