/// <reference types="react-native" />
/// <reference types="react" />
import { Component, ReactNode } from 'react';
import { ViewStyle } from 'react-native';
import { CommonInputProps, TextInputProps, FocusInputProps, AutoFocusInputProps, LengthInputProps } from '../../../../../JSCore';
export interface TextAreaEvent {
    nativeEvent: {
        value?: string;
    };
}
export interface Props extends CommonInputProps, FocusInputProps, AutoFocusInputProps, LengthInputProps {
    /**
     * &#x1F534; **Deprecated**.
     * @private
     */
    underlined?: boolean;
    /**
    * Атрибут определяет вид разделителя. Допустимые значения содержатся в справочнике `UnderlineType`:
    * - `FULL` - разделитель будет во всю ширину компонента без отступов;
    * - `MARGINS` (значение по умолчанию) - отступ слева будет совпадать с отступом контента;
    * - `NONE` - разделитель отсутствует.
    */
    underlineType?: number;
    /**
     * Стили React.
     */
    style?: ViewStyle;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * Дочерние компоненты могут быть следующих типов:
     * - `HintIcon`(к компоненту будет применено автоматическое позиционирование)
     */
    children?: ReactNode;
}
export interface PublicProps extends Props, TextInputProps {
}
export interface PrivateProps extends Props {
    onChange?: (event: TextAreaEvent) => void;
}
/**
 * Компонент предназначен для многострочного ввода текстовой или числовой информации.
 * ##### Размещение
 * При размещении в платформенных контейнерах(`SplitPanel`, `Popover`) будет
 * работать функция автоматического скролла при появлении и скрытии клавиатуры.
 *
 * ##### Методы
 * 1. dismissKeyboard()
 *
 * <br/>
 *
 * Принудительно скрывает клавиатуру.
 * @category Visual/Input
 */
export default class UFSTextAreaManager extends Component<PublicProps, {}> {
    instance: any;
    oldValue: string;
    forceUpdateValue: (value: string) => void;
    componentDidUpdate(): void;
    componentWillUpdate(nextProps: Object, nextState: Object): void;
    onChange: (event: TextAreaEvent) => void;
    /**
     * Принудительно скрывает клавиатуру.
     */
    dismissKeyboard: () => void;
    onComponentRef: (component: any) => void;
    render(): JSX.Element;
}
