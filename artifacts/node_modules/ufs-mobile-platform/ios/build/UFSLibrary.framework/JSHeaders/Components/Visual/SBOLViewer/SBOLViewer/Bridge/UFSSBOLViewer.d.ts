/// <reference types="react" />
/// <reference types="react-native" />
import { Component, ReactNode } from 'react';
import { ViewStyle } from 'react-native';
import { UFSError, ErrorUserInfo } from '../../../../JSCore/Common/UFSError';
export interface Props {
    /**
     * URL начальной страницы, которая будет загружена в плеер.
     */
    startUrl: string;
    /**
     * Одиночный URL либо массив URL, при переходе на которые будет вызван `onFinish`.
     * Запрос загрузки `finishUrl` при этом выполнен не будет.
     */
    finishUrl: string | [string];
    /**
     * Вызывается после успешной загрузки начальной страницы.
     */
    onStart?: () => void;
    /**
     * Вызывается в момент завершения работы СБОЛ ПРО.
     */
    onFinish?: () => void;
    /**
     * @private
     * Дочерние компоненты не поддерживаются.
     */
    children?: ReactNode;
    /**
     * Стили React.
     */
    style?: ViewStyle;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
}
export interface PublicProps extends Props {
    /**
    * Вызывается при возникновении ошибок. Возможные коды ошибок:
    * - `UFSSBOLViewerErrorCodeInvalidStartURL` - возникает при незаданном или невалидном startUrl;
    * - `UFSSBOLViewerErrorCodeInvalidFinishURL` - возникает при незаданном или невалидном finishUrl;
    * - Вложенный `NSError`.
    */
    onError?: (error: UFSError) => void;
}
export interface PrivateProps extends Props {
    onError?: (event: OnErrorEvent) => void;
}
export interface OnErrorEvent {
    nativeEvent: {
        error: ErrorUserInfo;
    };
}
/**
 * Используется для работы со СБОЛ ПРО.
 *
 * @category Visual
 */
export default class UFSSBOLViewerManager extends Component<PublicProps, {}> {
    private onError;
    render(): JSX.Element;
}
