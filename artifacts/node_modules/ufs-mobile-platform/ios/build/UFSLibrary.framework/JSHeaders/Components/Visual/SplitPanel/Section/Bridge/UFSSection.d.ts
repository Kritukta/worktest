/// <reference types="react" />
import React, { Component, ReactNode } from 'react';
export interface Props extends React.Props<UFSSectionManager> {
    /**
     * Заголовок секции.
     *
     * В случаи отсутствия секции стыкуются. Может содержать несколько строк и абзацев.
     */
    title?: string;
    /**
     * @private
     */
    hasTitle?: boolean;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * Любые дочерние компоненты.
     *
     * Поддерживается автоматическое позиционирование `HintIcon`.
     * Для автоматического позиционирования необходимо у `HintIcon` задать значение `true` свойству `autoPosition`.
     */
    children?: ReactNode;
}
export interface PublicProps extends Props {
    /**
     * Верхний отступ.
     *
     * По умолчанию равен 10, если есть заголовок.
     * И 0, если заголовка нет.
     */
    marginTop?: number;
    /**
     * Нижний отступ.
     *
     * По умолчанию равен 0.
     */
    marginBottom?: number;
}
export interface PrivateProps extends Props {
    sectionMarginTop?: number;
    sectionMarginBottom?: number;
}
/**
 * Используется как контейнер для группировки контента.
 *
 * <br/>
 *
 * Секции разделяются между собой промежутками фиксированного размера.
 * @category Visual/SplitPanel
 */
export default class UFSSectionManager extends Component<PublicProps, {}> {
    render(): JSX.Element;
}
