var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import React, { Component } from 'react';
import { UIManager, requireNativeComponent } from 'react-native';
import { Icon } from '../../../../../';
import ProfileIcon from '../../ProfileIcon/Bridge/UFSProfileIcon';
export const UFSMainContainerIconType = UIManager.UFSMainContainerView.Constants.IconType;
/**
 * Обязательная левая часть типизированной ячейки, которая содержит основную информацию.
 * @category Visual/Table/Base Cells/Main Container
 */
export default class UFSMainContainerManager extends Component {
    render() {
        let iconType = UFSMainContainerIconType.NONE;
        React.Children.map(this.props.children, (child) => {
            if (child) {
                if (child.type === Icon) {
                    iconType = UFSMainContainerIconType.REGULAR;
                }
                else if (child.type === ProfileIcon) {
                    iconType = UFSMainContainerIconType.PROFILE;
                }
            }
            return child;
        });
        return (React.createElement(UFSMainContainer, __assign({}, this.props, {iconType: iconType, testID: this.props.testID})));
    }
}
const UFSMainContainer = requireNativeComponent('UFSMainContainerView');
//# sourceMappingURL=UFSMainContainer.js.map