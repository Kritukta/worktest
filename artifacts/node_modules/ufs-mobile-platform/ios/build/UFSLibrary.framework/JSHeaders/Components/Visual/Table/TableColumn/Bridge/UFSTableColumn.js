import React, { Component } from 'react';
import { UIManager, requireNativeComponent } from 'react-native';
import UFSText from '../../../Text/UFSText';
import { renderHintIcons } from '../../../HintIcon/HintIcon/Bridge/UFSHintIcon';
export const UFSTableColumnAlignment = UIManager.UFSTableColumnView.Constants;
/**
 * @category Visual/Table
 * #### Особенности использования
 *
 * - Количество колонок должно соответствовать количеству ячеек в каждом ряду.
 * - Ширина колонок будет выставлена всем соответствующим нижестоящим ячейкам.
 * - Заголовок колонки задаётся дочерним элементом с типом `Text`.
 */
export default class UFSTableColumnManager extends Component {
    constructor() {
        super(...arguments);
        this.hintIcons = [];
        this.findColumnTitle = (children) => {
            let text = children
                .filter((child) => child.type == UFSText)
                .map(child => this.columnTitle(child.props.children))
                .join(' ');
            return text;
        };
        this.columnTitle = (entity) => {
            if (typeof entity === 'string') {
                return entity;
            }
            let result = "";
            if (entity instanceof Array) {
                if (!this.hasHintIcon(this.hintIcons)) {
                    this.hintIcons = renderHintIcons(entity, 'TableColumn', 1);
                }
                result = entity
                    .filter((child) => typeof child === 'string')
                    .join(' ');
            }
            return result;
        };
        this.hasHintIcon = (hintIcons) => {
            return (hintIcons) && (hintIcons.length > 0);
        };
    }
    render() {
        const children = React.Children.toArray(this.props.children);
        this.hintIcons = renderHintIcons(this.props.children, 'TableColumn', 1);
        const text = this.findColumnTitle(children);
        return (React.createElement(UFSTableColumn, {style: this.props.style, title: text, widthString: this.props.width, align: this.props.align, testID: this.props.testID, noPaddings: this.props.noPaddings, hasHintIcon: this.hasHintIcon(this.hintIcons)}, this.hintIcons));
    }
}
UFSTableColumnManager.defaultProps = {
    align: UFSTableColumnAlignment.LEFT
};
const UFSTableColumn = requireNativeComponent('UFSTableColumnView');
//# sourceMappingURL=UFSTableColumn.js.map