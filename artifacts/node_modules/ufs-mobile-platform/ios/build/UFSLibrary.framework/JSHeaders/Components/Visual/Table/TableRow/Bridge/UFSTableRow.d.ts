/// <reference types="react-native" />
/// <reference types="react" />
import { Component, ReactNode } from 'react';
import { ViewStyle } from 'react-native';
import { TableBodyChildProps } from '../../TableBody/Bridge/UFSTableBody';
export declare const UnderlineType: any;
export interface Props extends TableBodyChildProps {
    /**
     * Обработчик события нажатия
     */
    onClick?: () => void;
    /**
     * &#x1F534; **Deprecated**. Атрибут определяет, должен ли ряд таблицы подсвечиваться при касании пользователем.
     *
     * Изменение этого атрибута теперь ни на что не влияет. Ряд таблицы будет подсвечиваться
     * при касании, если задана функция `onClick`.
     */
    selectable?: boolean;
    /**
     * Атрибут определяет доступность ряда таблицы для интеракций. Если он выставлен в `false`,
     * то обработчик `onClick` не будет вызываться при касании ряда пользователем. При использовании
     * в качестве дочернего компонента `BaseCell`, его внешний вид изменится соответствующе.
     */
    disabled?: boolean;
    /**
     * Атрибут влияет на внешний вид ряда таблицы. При использовании в качестве дочернего
     * компонента `BaseCell`, его внешний вид также изменится.
     */
    selected?: boolean;
    /**
     * Атрибут определяет вид разделителя в таблице. Допустимые значения содержатся в справочнике `Underlinetype`:
     * - `NONE` - у ряда не будет разделителя;
     * - `FULL` - разделитель будет во всю ширину ряда без отступов;
     * - `MARGINS` (значение по умолчанию) - у разделителя будут отступы, согласно гайдлайнам по дизайну библиотеки:
     *   - `TableCell` - отступ слева 20 точек;
     *   - `BaseCell` - отступ слева по лейблу в `MainConrainer`;
     *   - `ProfileCell` - отступ слева 20 точек.
     */
    underlineType?: number;
    /**
     * Стили React.
     */
    style?: ViewStyle;
    /**
     * Идентификатор для UI-тестирования.
     */
    testID?: string;
    /**
     * Дочерние компоненты могут быть следующих типов:
     * - `TableCell`;
     * - `ProfileCell`;
     * - `BaseCell`.
     */
    children?: ReactNode;
}
export interface TableRowChildProps {
    /**
     * @private
     * Добавляется компонентом `TableRow`.
     */
    noPaddings?: boolean;
}
/**
 * @category Visual/Table
 * Контейнер для создания строки таблицы.
 */
export default class UFSTableRowManager extends Component<Props, {}> {
    hasBaseCellInChildren: () => boolean;
    tableRowPadding(): ViewStyle;
    render(): JSX.Element;
}
