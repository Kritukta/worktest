var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
import React, { Component } from 'react';
import UFSWFBreadcrumbs from './UFSWFBreadcrumbs';
/**
 * Компонент автоматически отображает историю шагов из соответствующего раздела redux store.
 * Внешне он полностью соответствует компоненту `Breadcrumbs`.
 *
 * ##### Особенности
 * Компонент использует redux store для отрисовки своего состояния, поэтому для корректной работы в прикладном приложении должен использоваться библиотечный `UFSProvider`.
 * @category Visual/Breadcrumbs
 */
export default class UFSWFBreadcrumbsWrapper extends Component {
    render() {
        return (React.createElement(UFSWFBreadcrumbs, __assign({}, this.props)));
    }
    ;
}
//# sourceMappingURL=UFSWFBreadcrumbsWrapper.js.map