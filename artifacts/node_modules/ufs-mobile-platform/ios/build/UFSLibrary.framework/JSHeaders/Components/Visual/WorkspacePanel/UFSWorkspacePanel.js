import React, { Component } from 'react';
import { View, StyleSheet } from 'react-native';
export const UFSWorkspacePanelType = {
    accessory: 'accessory',
    content: 'content'
};
/**
 * Легковесный компонент для упрощения вёрстки. Представляет из себя контейнер для размещения в `WorkspaceContainer`.
 * Имеет два отображения - `accessory` и `content`.
 *
 * Оба отображения имеют серый фон, но `accessory` визуально находится ниже `content`. `accessory` имеет меньшую ширину, чем `content`.
 * Обычно внутри `WorkspaceContainer` размещается один (`content`) или два (`accessory` и `content`) `WorkspacePanel`, но
 * возможны и другие варианты использования компонента.
 *
 * Компонент допускает кастомизацию, стили, применённые к компоненту, имеют более высокий приоритет,
 * чем стандартные стили компонента.
 *
 * @category Visual/Workspace
 */
export default class UFSWorkspacePanel extends Component {
    constructor() {
        super(...arguments);
        this.panelStyle = () => {
            const { type } = this.props;
            switch (type) {
                case 'accessory':
                    return styles.accessoryPanel;
                case 'content':
                    return styles.contentPanel;
            }
        };
    }
    render() {
        return (React.createElement(View, {style: [this.panelStyle(), this.props.style]}, this.props.children));
    }
}
const styles = StyleSheet.create({
    accessoryPanel: {
        flex: 1,
        backgroundColor: '#F5F5F5'
    },
    contentPanel: {
        flex: 2,
        shadowOffset: {
            width: 0,
            height: 2
        },
        shadowRadius: 15,
        shadowOpacity: 1,
        shadowColor: '#00000017',
        zIndex: 100,
        backgroundColor: '#F5F5F5'
    }
});
//# sourceMappingURL=UFSWorkspacePanel.js.map