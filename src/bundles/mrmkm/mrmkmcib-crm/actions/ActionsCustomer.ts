/**
 * Actions of Customer container.
 *
 * @author Burnaev M.U.
 * @see
 */

import {Enums} from '../Enums'
import {Models} from "mrmkmcib-crm"
import Action from "../models/Action"
import Response from "../models/Response"
import Error from "../models/Error"


export const PERFORM_DASHBOARD_EXPANDED_MODE_TOGGLE = 'CUSTOMER_CONTAINER_PERFORM_DASHBOARD_EXPANDED_MODE_TOGGLE'

export const PERFORM_INPUT_SEARCH_AFFILIATE_LIST = 'CUSTOMER_CONTAINER_PERFORM_INPUT_SEARCH_AFFILIATE_LIST'

export const PERFORM_AFFILIATE_LIST_SEARCH = 'CUSTOMER_CONTAINER_PERFORM_AFFILIATE_LIST_SEARCH'

export const PERFORM_SEARCH_AFFILIATE_LIST_ENABLE = 'CUSTOMER_CONTAINER_PERFORM_SEARCH_AFFILIATE_LIST_ENABLE'

export const PERFORM_SEARCH_AFFILIATE_LIST_DISABLE = 'CUSTOMER_CONTAINER_PERFORM_SEARCH_AFFILIATE_LIST_DISABLE'

export const PERFORM_CHANGE_TAB = 'CUSTOMER_CONTAINER_PERFORM_CHANGE_TAB'

export const PERFORM_POPOVER_HOLDER_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_HOLDER_SHOW'

export const PERFORM_POPOVER_HOLDER_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_HOLDER_HIDE'

export const PERFORM_POPOVER_CURATOR_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_CURATOR_SHOW'

export const PERFORM_POPOVER_CURATOR_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_CURATOR_HIDE'

export const PERFORM_POPOVER_OCCASION_LIST_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_OCCASION_LIST_SHOW'

export const PERFORM_POPOVER_OCCASION_LIST_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_OCCASION_LIST_HIDE'

export const PERFORM_POPOVER_NOTE_LIST_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_NOTE_LIST_SHOW'

export const PERFORM_POPOVER_NOTE_LIST_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_NOTE_LIST_HIDE'

export const PERFORM_POPOVER_PROBLEM_LIST_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_PROBLEM_LIST_SHOW'

export const PERFORM_POPOVER_PROBLEM_LIST_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_PROBLEM_LIST_HIDE'

export const PERFORM_POPOVER_OWNER_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_OWNER_SHOW'

export const PERFORM_POPOVER_OWNER_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_OWNER_HIDE'

export const NAVIGATE_TO_OWNER_AGENT_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_OWNER_AGENT_SCREEN'

export const NAVIGATE_TO_CUSTOMER_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_CUSTOMER_SCREEN'

export const PERFORM_REFRESH = 'CUSTOMER_CONTAINER_PERFORM_REFRESH'

export const CUSTOMER_CALL_GET_CUSTOMER = 'CUSTOMER_CONTAINER_CUSTOMER_CALL_GET_CUSTOMER'
export const CUSTOMER_CALL_GET_CUSTOMER_REQUEST = 'CUSTOMER_CONTAINER_CUSTOMER_CALL_GET_CUSTOMER_REQUEST'
export const CUSTOMER_CALL_GET_CUSTOMER_SUCCESS = 'CUSTOMER_CONTAINER_CUSTOMER_CALL_GET_CUSTOMER_SUCCESS'
export const CUSTOMER_CALL_GET_CUSTOMER_FAILURE = 'CUSTOMER_CONTAINER_CUSTOMER_CALL_GET_CUSTOMER_FAILURE'

export const CUSTOMER_OPEN_CUSTOMER = 'CUSTOMER_CONTAINER_CUSTOMER_OPEN_CUSTOMER'

export const CUSTOMER_OPEN_CUSTOMER_MANAGED = 'CUSTOMER_CONTAINER_CUSTOMER_OPEN_CUSTOMER_MANAGED'

export const PERFORM_POPOVER_LIMIT_SHOW = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_LIMIT_SHOW'

export const PERFORM_POPOVER_LIMIT_HIDE = 'CUSTOMER_CONTAINER_PERFORM_POPOVER_LIMIT_HIDE'

export const NAVIGATE_TO_POPOVER_LIMIT_ITEM_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_POPOVER_LIMIT_ITEM_SCREEN'

export const NAVIGATE_POPOVER_LIMIT_BACK = 'CUSTOMER_CONTAINER_NAVIGATE_POPOVER_LIMIT_BACK'

export const NAVIGATE_TO_LIMIT_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_LIMIT_SCREEN'

export const CALL_GET_LIMIT_NEW = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_NEW'
export const CALL_GET_LIMIT_NEW_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_NEW_REQUEST'
export const CALL_GET_LIMIT_NEW_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_NEW_SUCCESS'
export const CALL_GET_LIMIT_NEW_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_NEW_FAILURE'

export const CALL_GET_LIMIT_OLD = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_OLD'
export const CALL_GET_LIMIT_OLD_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_OLD_REQUEST'
export const CALL_GET_LIMIT_OLD_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_OLD_SUCCESS'
export const CALL_GET_LIMIT_OLD_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_LIMIT_OLD_FAILURE'

export const PERFORM_LIMIT_SHOW = 'CUSTOMER_CONTAINER_PERFORM_LIMIT_SHOW'

export const PERFORM_INPUT_PRODUCT_LIST_AGREEMENT_STATUS = 'CUSTOMER_CONTAINER_PERFORM_INPUT_PRODUCT_LIST_AGREEMENT_STATUS'

export const PERFORM_PRODUCT_TYPE_LIST_REFRESH = 'CUSTOMER_CONTAINER_PERFORM_PRODUCT_TYPE_LIST_REFRESH'

export const CLEAR_PRODUCT_LIST_CACHE = 'CUSTOMER_CONTAINER_CLEAR_PRODUCT_LIST_CACHE'

export const PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_HIDE = 'CUSTOMER_CONTAINER_PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_HIDE'

export const PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_SHOW = 'CUSTOMER_CONTAINER_PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_SHOW'

// START Action list of Credit product list

export const CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_CREDIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_CREDIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID'

export const CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_CREDIT_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_CREDIT_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of Credit product list

// START Action list of Deposit product list

export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_DEPOSIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_DEPOSIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID'


export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_DEPOSIT_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_DEPOSIT_CLOSE_PRODUCT_LIST_OPERATION_UUID'


// END Action list of deposit product list


// START Action list of SettlementAgreement product list
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_OPERATION_UUID'



export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of SettlementAgreement product list


// START Action list of CorporateCard product list
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_OPERATION_UUID'


export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_CORPORATE_CARD_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_CORPORATE_CARD_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of CorporateCard product list

// START Action list of CorporateCard product list
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_OPERATION_UUID'


export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_FAILURE'

export const UPDATE_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of EncashmentContract product list

// START Action list of ACQUIRING product list
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_ACQUIRING_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_ACQUIRING_ACTIVE_PRODUCT_LIST_OPERATION_UUID'

export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_ACQUIRING_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_ACQUIRING_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of ACQUIRING product list


// START Action list of DBO product list
export const CALL_GET_DBO_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_DBO_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_DBO_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_DBO_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_DBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_DBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID'


export const CALL_GET_DBO_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_DBO_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_DBO_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_DBO_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_DBO_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_DBO_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of DBO product list


// START Action list of SALARY product list
export const CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_SALARY_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_SALARY_ACTIVE_PRODUCT_LIST_OPERATION_UUID'


export const CALL_GET_SALARY_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_SALARY_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_SALARY_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_SALARY_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_SALARY_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_SALARY_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of SALARY product list


// START Action list of UDBO product list
export const CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_PERFORM'
export const CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_REQUEST'
export const CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_FAILURE'
export const UPDATE_UDBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_UDBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID'


export const CALL_GET_UDBO_CLOSE_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_LIST_PERFORM'
export const CALL_GET_UDBO_CLOSE_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_LIST_REQUEST'
export const CALL_GET_UDBO_CLOSE_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_LIST_SUCCESS'
export const CALL_GET_UDBO_CLOSE_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_LIST_FAILURE'
export const UPDATE_UDBO_CLOSE_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_UDBO_CLOSE_PRODUCT_LIST_OPERATION_UUID'

// END Action list of UDBO product list


export const CALL_GET_LEGAL_INFO_PRODUCT_LIST_PERFORM = 'CUSTOMER_CONTAINER_CALL_GET_CALL_GET_LEGAL_INFO_PRODUCT_LIST_PERFORM'
export const CALL_GET_LEGAL_INFO_PRODUCT_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_CALL_GET_LEGAL_INFO_PRODUCT_LIST_REQUEST'
export const CALL_GET_LEGAL_INFO_PRODUCT_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_CALL_GET_LEGAL_INFO_PRODUCT_LIST_SUCCESS'
export const CALL_GET_LEGAL_INFO_PRODUCT_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_CALL_GET_LEGAL_INFO_PRODUCT_LIST_FAILURE'
export const UPDATE_LEGAL_INFO_PRODUCT_LIST_OPERATION_UUID = 'CUSTOMER_CONTAINER_UPDATE_LEGAL_INFO_PRODUCT_LIST_OPERATION_UUID'

export const CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST'
export const CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_FAILURE'


// START Action list of EKS_CREDIT_LIST product list

export const CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_FAILURE'

// END Action list of EKS_CREDIT_LIST product list

// START Action list of EKS_SETTELEMENT_AGREEMENT_LIST product list

export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_FAILURE'

// END Action list of EKS_SETTELEMENT_AGREEMENT_LIST product list

// START Action list of EKS_DEPOSIT_LIST product list
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_DEPOSIT_LIST product list

// START Action list of EKS_CORPORATE_CARD_LIST product list
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_CORPORATE_CARD_LIST product list

// START Action list of EKS_ENCASHMENT_CONTRACT_LIST product list
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_ENCASHMENT_CONTRACT_LIST product list

// START Action list of EKS_ACQUIRING_LIST product list
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_ACQUIRING_LIST product list



// START Action list of EKS_DBO_LIST product list
export const CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_DBO_LIST product list

// START Action list of EKS_UDBO_LIST product list
export const CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_UDBO_LIST product list

// START Action list of EKS_SALARY_LIST product list
export const CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST'
export const CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_FAILURE'

export const CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST'
export const CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_REQUEST'
export const CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_SUCCESS'
export const CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_FAILURE'
// END Action list of EKS_SALARY_LIST product list


export const CALL_GET_FORECAST_DEAL_LIST = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_DEAL_LIST'
export const CALL_GET_FORECAST_DEAL_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_DEAL_LIST_REQUEST'
export const CALL_GET_FORECAST_DEAL_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_DEAL_LIST_SUCCESS'
export const CALL_GET_FORECAST_DEAL_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_DEAL_LIST_FAILURE'


export const CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST'
export const CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_REQUEST = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_REQUEST'
export const CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_SUCCESS = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_SUCCESS'
export const CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_FAILURE = 'CUSTOMER_CONTAINER_CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_FAILURE'

export const NAVIGATE_TO_CUSTOMER_ACTIVITY_INCLUDE_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_CUSTOMER_ACTIVITY_INCLUDE_SCREEN'

export const NAVIGATE_TO_CUSTOMER_ACTIVITY_EXCLUDE_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_CUSTOMER_ACTIVITY_EXCLUDE_SCREEN'

export const NAVIGATE_TO_CUSTOMER_ACTIVITY_ACCESS_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_CUSTOMER_ACTIVITY_ACCESS_SCREEN'

export const NAVIGATE_BACK_FROM_CUSTOMER_ACTIVITY_ACCESS_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_BACK_FROM_CUSTOMER_ACTIVITY_ACCESS_SCREEN'

export const NAVIGATE_TO_AGENT_LIST_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_AGENT_LIST_SCREEN'

export const CLOSE_CUSTOMER_ACTIVITY_PANEL = 'CUSTOMER_CONTAINER_CLOSE_CUSTOMER_ACTIVITY_PANEL'

export const PERFORM_CONTAINER_RESET = 'CUSTOMER_CONTAINER_PERFORM_CONTAINER_RESET'

export const NAVIGATE_BACK = 'CUSTOMER_CONTAINER_NAVIGATE_BACK'

export const PERFORM_FLUSH = 'CUSTOMER_CONTAINER_PERFORM_FLUSH'

export const NAVIGATE_TO_MEMBER_LIST_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_MEMBER_LIST_SCREEN'

export const NAVIGATE_TO_OCCASION_LIST_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_OCCASION_LIST_SCREEN'

export const NAVIGATE_TO_EMPLOYEE_VIEW_SCREEN = 'CUSTOMER_CONTAINER_NAVIGATE_TO_EMPLOYEE_VIEW_SCREEN'

export const PERFORM_REFRESH_BAR_HIDE = 'CUSTOMER_CONTAINER_PERFORM_REFRESH_BAR_HIDE'

export const PERFORM_PRODUCT_LIST_MODAL_ALERT_SHOW = 'CUSTOMER_CONTAINER_PERFORM_PRODUCT_LIST_MODAL_ALERT_SHOW'

export const PERFORM_PRODUCT_LIST_MODAL_ALERT_HIDE = 'CUSTOMER_CONTAINER_PERFORM_PRODUCT_LIST_MODAL_ALERT_HIDE'

export const NAVIGATION_HISTORY_POP = 'CUSTOMER_CONTAINER_NAVIGATION_HISTORY_POP'

export const PERFORM_SET_ACTIVITY_ACCESS_ERROR = 'CUSTOMER_CONTAINER_PERFORM_SET_ACTIVITY_ACCESS_ERROR'

/**
 * Action dispatched by "Customer" screen. Used to hide refresh bar
 *
 */
export type PERFORM_REFRESH_BAR_HIDE = {}
export const performRefreshBarHide = (): Action<PERFORM_REFRESH_BAR_HIDE> => ({
    type: PERFORM_REFRESH_BAR_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to toggle DashboardExpandedMode.
 *
 */
export type PERFORM_DASHBOARD_EXPANDED_MODE_TOGGLE = {}
export const performDashboardExpandedModeToggle = (): Action<PERFORM_DASHBOARD_EXPANDED_MODE_TOGGLE> => ({
    type: PERFORM_DASHBOARD_EXPANDED_MODE_TOGGLE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to input search text.
 *
 * @param {string} search .
 */
export type PERFORM_INPUT_SEARCH_AFFILIATE_LIST = { search: string }
export const performInputSearchAffiliateList = (search: string): Action<PERFORM_INPUT_SEARCH_AFFILIATE_LIST> => ({
    type: PERFORM_INPUT_SEARCH_AFFILIATE_LIST,
    payload: {
        search: search,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to perform search query.
 *
 */
export type PERFORM_AFFILIATE_LIST_SEARCH = {}
export const performAffiliateListSearch = (): Action<PERFORM_AFFILIATE_LIST_SEARCH> => ({
    type: PERFORM_AFFILIATE_LIST_SEARCH,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
*
*/
export type UPDATE_CREDIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateCreditActiveProductListOperationUuid = (): Action<UPDATE_CREDIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_CREDIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_CREDIT_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateCreditCloseProductListOperationUuid = (): Action<UPDATE_CREDIT_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_CREDIT_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_DEPOSIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateDepositActiveProductListOperationUuid = (): Action<UPDATE_DEPOSIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_DEPOSIT_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_DEPOSIT_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateDepositCloseProductListOperationUuid = (): Action<UPDATE_DEPOSIT_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_DEPOSIT_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateSettementAgreementActiveProductListOperationUuid = (): Action<UPDATE_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateSettementAgreementCloseProductListOperationUuid = (): Action<UPDATE_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateCorporateCardActiveProductListOperationUuid = (): Action<UPDATE_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_CORPORATE_CARD_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateCorporateCardCloseProductListOperationUuid = (): Action<UPDATE_CORPORATE_CARD_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_CORPORATE_CARD_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateEncashmentContractActiveProductListOperationUuid = (): Action<UPDATE_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateEncashmentContractCloseProductListOperationUuid = (): Action<UPDATE_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_ACQUIRING_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateAcquiringActiveProductListOperationUuid = (): Action<UPDATE_ACQUIRING_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_ACQUIRING_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_ACQUIRING_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateAcquiringCloseProductListOperationUuid = (): Action<UPDATE_ACQUIRING_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_ACQUIRING_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_DBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateDboActiveProductListOperationUuid = (): Action<UPDATE_DBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_DBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_DBO_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateDboCloseProductListOperationUuid = (): Action<UPDATE_DBO_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_DBO_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_SALARY_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateSalaryActiveProductListOperationUuid = (): Action<UPDATE_SALARY_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_SALARY_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_SALARY_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateSalaryCloseProductListOperationUuid = (): Action<UPDATE_SALARY_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_SALARY_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_UDBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateUdboActiveProductListOperationUuid = (): Action<UPDATE_UDBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_UDBO_ACTIVE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_UDBO_CLOSE_PRODUCT_LIST_OPERATION_UUID = {}
export const updateUdboCloseProductListOperationUuid = (): Action<UPDATE_UDBO_CLOSE_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_UDBO_CLOSE_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to update operation uuid product list service.
 *
 */
export type UPDATE_LEGAL_INFO_PRODUCT_LIST_OPERATION_UUID = {}
export const updateLegalInfoProductListOperationUuid = (): Action<UPDATE_LEGAL_INFO_PRODUCT_LIST_OPERATION_UUID> => ({
    type: UPDATE_LEGAL_INFO_PRODUCT_LIST_OPERATION_UUID,
    payload: {}
})
/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to enable search mode.
 *
 */
export type PERFORM_SEARCH_AFFILIATE_LIST_ENABLE = {}
export const performSearchAffiliateListEnable = (): Action<PERFORM_SEARCH_AFFILIATE_LIST_ENABLE> => ({
    type: PERFORM_SEARCH_AFFILIATE_LIST_ENABLE,
    payload: {}
})





/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to enable search mode.
 *
 */
export type PERFORM_SEARCH_AFFILIATE_LIST_DISABLE = {}
export const performSearchAffiliateListDisable = (): Action<PERFORM_SEARCH_AFFILIATE_LIST_DISABLE> => ({
    type: PERFORM_SEARCH_AFFILIATE_LIST_DISABLE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen.
 *
 */
export type NAVIGATE_BACK = {}
export const navigateBack = (): Action<NAVIGATE_BACK> => ({
    type: NAVIGATE_BACK,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain dispatched on tab selector change current tab.
 *
 * @param {number} index .
 * @param {Enums.CustomerManagedTab} value .
 */
export type PERFORM_CHANGE_TAB = { index: number, value: Enums.CustomerManagedTab, }
export const performChangeTab = (index: number, value: Enums.CustomerManagedTab,): Action<PERFORM_CHANGE_TAB> => ({
    type: PERFORM_CHANGE_TAB,
    payload: {
        index: index,
        value: value,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type PERFORM_POPOVER_HOLDER_SHOW = {}
export const performPopoverHolderShow = (): Action<PERFORM_POPOVER_HOLDER_SHOW> => ({
    type: PERFORM_POPOVER_HOLDER_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_HOLDER_HIDE = {}
export const performPopoverHolderHide = (): Action<PERFORM_POPOVER_HOLDER_HIDE> => ({
    type: PERFORM_POPOVER_HOLDER_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type PERFORM_POPOVER_CURATOR_SHOW = {}
export const performPopoverCuratorShow = (): Action<PERFORM_POPOVER_CURATOR_SHOW> => ({
    type: PERFORM_POPOVER_CURATOR_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_CURATOR_HIDE = {}
export const performPopoverCuratorHide = (): Action<PERFORM_POPOVER_CURATOR_HIDE> => ({
    type: PERFORM_POPOVER_CURATOR_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type NAVIGATE_TO_AGENT_LIST_SCREEN = {}
export const navigateToAgentListScreen = (): Action<NAVIGATE_TO_AGENT_LIST_SCREEN> => ({
    type: NAVIGATE_TO_AGENT_LIST_SCREEN,
    payload: {}
})


/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type NAVIGATE_TO_MEMBER_LIST_SCREEN = {}
export const navigateToMemberListScreen = (): Action<NAVIGATE_TO_MEMBER_LIST_SCREEN> => ({
    type: NAVIGATE_TO_MEMBER_LIST_SCREEN,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type PERFORM_POPOVER_OCCASION_LIST_SHOW = {}
export const performPopoverOccasionListShow = (): Action<PERFORM_POPOVER_OCCASION_LIST_SHOW> => ({
    type: PERFORM_POPOVER_OCCASION_LIST_SHOW,
    payload: {}
})

export type NAVIGATE_TO_OCCASION_LIST_SCREEN = {}
export const navigateToOccasionListScreen = (): Action<NAVIGATE_TO_OCCASION_LIST_SCREEN> => ({
    type: NAVIGATE_TO_OCCASION_LIST_SCREEN,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_OCCASION_LIST_HIDE = {}
export const performPopoverOccasionListHide = (): Action<PERFORM_POPOVER_OCCASION_LIST_HIDE> => ({
    type: PERFORM_POPOVER_OCCASION_LIST_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type PERFORM_POPOVER_NOTE_LIST_SHOW = {}
export const performPopoverNoteListShow = (): Action<PERFORM_POPOVER_NOTE_LIST_SHOW> => ({
    type: PERFORM_POPOVER_NOTE_LIST_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_NOTE_LIST_HIDE = {}
export const performPopoverNoteListHide = (): Action<PERFORM_POPOVER_NOTE_LIST_HIDE> => ({
    type: PERFORM_POPOVER_NOTE_LIST_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 */
export type PERFORM_POPOVER_PROBLEM_LIST_SHOW = {}
export const performPopoverProblemListShow = (): Action<PERFORM_POPOVER_PROBLEM_LIST_SHOW> => ({
    type: PERFORM_POPOVER_PROBLEM_LIST_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_PROBLEM_LIST_HIDE = {}
export const performPopoverProblemListHide = (): Action<PERFORM_POPOVER_PROBLEM_LIST_HIDE> => ({
    type: PERFORM_POPOVER_PROBLEM_LIST_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to show popover.
 *
 * @param {Models.Owner} owner .
 */
export type PERFORM_POPOVER_OWNER_SHOW = { owner: Models.Owner }
export const performPopoverOwnerShow = (owner: Models.Owner): Action<PERFORM_POPOVER_OWNER_SHOW> => ({
    type: PERFORM_POPOVER_OWNER_SHOW,
    payload: {
        owner: owner,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_OWNER_HIDE = {}
export const performPopoverOwnerHide = (): Action<PERFORM_POPOVER_OWNER_HIDE> => ({
    type: PERFORM_POPOVER_OWNER_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk used to open owner agent screen.
 *
 * @param {Models.Agent} agent .
 */
export type NAVIGATE_TO_OWNER_AGENT_SCREEN = { agent: Models.Agent, agentContextMode: Enums.AgentContextMode }
export const navigateToOwnerAgentScreen = (agent: Models.Agent, agentContextMode: Enums.AgentContextMode): Action<NAVIGATE_TO_OWNER_AGENT_SCREEN> => ({
    type: NAVIGATE_TO_OWNER_AGENT_SCREEN,
    payload: {
        agent,
        agentContextMode,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk used to open customer screen and save navigation in history.
 *
 * @param { Models.CustomerManage } customerId - id of customer to navigate
 * @param { Enums.CustomerMode } customerMode - mode of navigation back
 * @param { Enums.HistoryActions } historyAction - push, pop or reset navigation history
 */
export type NAVIGATE_TO_CUSTOMER_SCREEN = {
    customer: Models.CustomerManaged,
    previousCustomer: Models.CustomerManaged,
    customerMode: Enums.CustomerMode,
    historyAction: Enums.HistoryActions,
    currentDealForecast: Models.ForecastDeal,
	currentDeal: Models.Deal,
}
export const navigateToCustomerScreen = (
    customer: Models.CustomerManaged,
    previousCustomer: Models.CustomerManaged,
    customerMode: Enums.CustomerMode,
    historyAction: Enums.HistoryActions = Enums.HistoryActions.Push,
    currentDealForecast: Models.ForecastDeal,
    currentDeal: Models.Deal,
): Action<NAVIGATE_TO_CUSTOMER_SCREEN> => ({
    type: NAVIGATE_TO_CUSTOMER_SCREEN,
    payload: {
        customer,
        previousCustomer,
        customerMode,
        historyAction,
        currentDealForecast,
        currentDeal,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk used to load any kind customer data.
 *
 */
export type PERFORM_REFRESH = {}
export const performRefresh = (): Action<PERFORM_REFRESH> => ({
    type: PERFORM_REFRESH,
    payload: {}
})
/**
 * Thunk dispatched by "Customer" screen. Thunk used to flush cache by any kind customer data and request it again.
 *
 */
export type PERFORM_FLUSH = {}
export const performFlush = (): Action<PERFORM_FLUSH> => ({
    type: PERFORM_FLUSH,
    payload: {}
})


/**
 * Internal thunk used in "Customer" container. Fetch current customer data.
 *
 */
export type CUSTOMER_CALL_GET_CUSTOMER = {}
export const customer_callGetCustomer = (): Action<CUSTOMER_CALL_GET_CUSTOMER> => ({
    type: CUSTOMER_CALL_GET_CUSTOMER,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "customer_callGetCustomer" started. Internal thunk used in "Customer" container. Fetch current customer data.
 */
export type CUSTOMER_CALL_GET_CUSTOMER_REQUEST = {}
export const customer_callGetCustomerRequest = (): Action<CUSTOMER_CALL_GET_CUSTOMER_REQUEST> => ({
    type: CUSTOMER_CALL_GET_CUSTOMER_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "customer_callGetCustomer". Internal thunk used in "Customer" container. Fetch current customer data.
 *
 * @param {Models.CustomerUnknown} response Data received by fetch.
 */
export type CUSTOMER_CALL_GET_CUSTOMER_SUCCESS = { response: Response<Models.CustomerUnknown> }
export const customer_callGetCustomerSuccess = (response: Response<Models.CustomerUnknown>): Action<CUSTOMER_CALL_GET_CUSTOMER_SUCCESS> => ({
    type: CUSTOMER_CALL_GET_CUSTOMER_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "customer_callGetCustomer". Internal thunk used in "Customer" container. Fetch current customer data.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CUSTOMER_CALL_GET_CUSTOMER_FAILURE = { error: Error }
export const customer_callGetCustomerFailure = (error: Error): Action<CUSTOMER_CALL_GET_CUSTOMER_FAILURE> => ({
    type: CUSTOMER_CALL_GET_CUSTOMER_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Internal thunk used in "Customer" container. Open not managed customer.
 *
 * @param {Models.Customer} customer .
 */
export type CUSTOMER_OPEN_CUSTOMER = { customer: Models.Customer, }
export const customer_openCustomer = (customer: Models.Customer,): Action<CUSTOMER_OPEN_CUSTOMER> => ({
    type: CUSTOMER_OPEN_CUSTOMER,
    payload: {
        customer: customer,
    }
})

/**
 * Internal thunk used in "Customer" container. Open managed customer.
 *
 * @param {Models.CustomerManaged} customerManaged .
 */
export type CUSTOMER_OPEN_CUSTOMER_MANAGED = { customerManaged: Models.CustomerManaged, }
export const customer_openCustomerManaged = (customerManaged: Models.CustomerManaged,): Action<CUSTOMER_OPEN_CUSTOMER_MANAGED> => ({
    type: CUSTOMER_OPEN_CUSTOMER_MANAGED,
    payload: {
        customerManaged: customerManaged,
    }
})

/**
 * Internal thunk used in "Customer" container. Thunk chain used to show popover.
 *
 */
export type PERFORM_POPOVER_LIMIT_SHOW = {}
export const performPopoverLimitShow = (): Action<PERFORM_POPOVER_LIMIT_SHOW> => ({
    type: PERFORM_POPOVER_LIMIT_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to hide popover.
 *
 */
export type PERFORM_POPOVER_LIMIT_HIDE = {}
export const performPopoverLimitHide = (): Action<PERFORM_POPOVER_LIMIT_HIDE> => ({
    type: PERFORM_POPOVER_LIMIT_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk used to open limit item details screen.
 *
 * @param {Enums.OldLimitItem} item .
 */
export type NAVIGATE_TO_POPOVER_LIMIT_ITEM_SCREEN = { item: Enums.OldLimitItem }
export const navigateToPopoverLimitItemScreen = (item: Enums.OldLimitItem): Action<NAVIGATE_TO_POPOVER_LIMIT_ITEM_SCREEN> => ({
    type: NAVIGATE_TO_POPOVER_LIMIT_ITEM_SCREEN,
    payload: {
        item: item,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk used to navigate back limit popover.
 *
 */
export type NAVIGATE_POPOVER_LIMIT_BACK = {}
export const navigatePopoverLimitBack = (): Action<NAVIGATE_POPOVER_LIMIT_BACK> => ({
    type: NAVIGATE_POPOVER_LIMIT_BACK,
    payload: {}
})

/**
 * Internal thunk used in "Customer" container. Thunk used to open customer limit screen.
 *
 */
export type NAVIGATE_TO_LIMIT_SCREEN = {}
export const navigateToLimitScreen = (): Action<NAVIGATE_TO_LIMIT_SCREEN> => ({
    type: NAVIGATE_TO_LIMIT_SCREEN,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Fetch current customer new limits.
 *
 */
export type CALL_GET_LIMIT_NEW = {}
export const callGetLimitNew = (): Action<CALL_GET_LIMIT_NEW> => ({
    type: CALL_GET_LIMIT_NEW,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetLimitNew" started. Thunk dispatched by "Customer" screen. Fetch current customer new limits.
 */
export type CALL_GET_LIMIT_NEW_REQUEST = {}
export const callGetLimitNewRequest = (): Action<CALL_GET_LIMIT_NEW_REQUEST> => ({
    type: CALL_GET_LIMIT_NEW_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetLimitNew". Thunk dispatched by "Customer" screen. Fetch current customer new limits.
 *
 * @param {Models.Limit} response Data received by fetch.
 */
export type CALL_GET_LIMIT_NEW_SUCCESS = { response: Response<Models.Limit> }
export const callGetLimitNewSuccess = (response: Response<Models.Limit>): Action<CALL_GET_LIMIT_NEW_SUCCESS> => ({
    type: CALL_GET_LIMIT_NEW_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetLimitNew". Thunk dispatched by "Customer" screen. Fetch current customer new limits.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_LIMIT_NEW_FAILURE = { error: Error }
export const callGetLimitNewFailure = (error: Error): Action<CALL_GET_LIMIT_NEW_FAILURE> => ({
    type: CALL_GET_LIMIT_NEW_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch current customer old limits.
 *
 */
export type CALL_GET_LIMIT_OLD = {}
export const callGetLimitOld = (): Action<CALL_GET_LIMIT_OLD> => ({
    type: CALL_GET_LIMIT_OLD,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetLimitOld" started. Thunk dispatched by "Customer" screen. Fetch current customer old limits.
 */
export type CALL_GET_LIMIT_OLD_REQUEST = {}
export const callGetLimitOldRequest = (): Action<CALL_GET_LIMIT_OLD_REQUEST> => ({
    type: CALL_GET_LIMIT_OLD_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetLimitOld". Thunk dispatched by "Customer" screen. Fetch current customer old limits.
 *
 * @param {Models.LimitOld} response Data received by fetch.
 */
export type CALL_GET_LIMIT_OLD_SUCCESS = { response: Response<Models.LimitOld> }
export const callGetLimitOldSuccess = (response: Response<Models.LimitOld>): Action<CALL_GET_LIMIT_OLD_SUCCESS> => ({
    type: CALL_GET_LIMIT_OLD_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetLimitOld". Thunk dispatched by "Customer" screen. Fetch current customer old limits.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_LIMIT_OLD_FAILURE = { error: Error }
export const callGetLimitOldFailure = (error: Error): Action<CALL_GET_LIMIT_OLD_FAILURE> => ({
    type: CALL_GET_LIMIT_OLD_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk used to open customer new limit screen or old limit popover.
 *
 */
export type PERFORM_LIMIT_SHOW = {}
export const performLimitShow = (): Action<PERFORM_LIMIT_SHOW> => ({
    type: PERFORM_LIMIT_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk dispatched on user input Active field.
 *
 * @param {boolean} value .
 * @param {Enums.ProductType} productType .
 */
export type PERFORM_INPUT_PRODUCT_LIST_AGREEMENT_STATUS = { value: Enums.ProductListAgreementStatus }
export const performInputProductListAgreementStatus = (value: Enums.ProductListAgreementStatus): Action<PERFORM_INPUT_PRODUCT_LIST_AGREEMENT_STATUS> => ({
    type: PERFORM_INPUT_PRODUCT_LIST_AGREEMENT_STATUS,
    payload: {
        value: value,
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch all product types data.
 *
 */
export type PERFORM_PRODUCT_TYPE_LIST_REFRESH = {}
export const performProductTypeListRefresh = (): Action<PERFORM_PRODUCT_TYPE_LIST_REFRESH> => ({
    type: PERFORM_PRODUCT_TYPE_LIST_REFRESH,
    payload: {}
})

/**
 * Internal thunk used in "Customer" container. Clear all network cache for product list if pollign status is not success or eksErrorList is not empty.
 *
 */
export type CLEAR_PRODUCT_LIST_CACHE = {}
export const clearProductListCache = (): Action<CLEAR_PRODUCT_LIST_CACHE> => ({
    type: CLEAR_PRODUCT_LIST_CACHE,
    payload: {}
})

/**
 * Internal thunk used in "Customer" container to show product list modal alert
 */
export type PERFORM_PRODUCT_LIST_MODAL_ALERT_SHOW = {}
export const performProductListModalAlertShow = (): Action<PERFORM_PRODUCT_LIST_MODAL_ALERT_SHOW> => ({
    type: PERFORM_PRODUCT_LIST_MODAL_ALERT_SHOW,
    payload: {}
})

/**
 * Internal thunk used in "Customer" container to hide product list modal alert
 */
export type PERFORM_PRODUCT_LIST_MODAL_ALERT_HIDE = {}
export const performProductListModalAlertHide = (): Action<PERFORM_PRODUCT_LIST_MODAL_ALERT_HIDE> => ({
    type: PERFORM_PRODUCT_LIST_MODAL_ALERT_HIDE,
    payload: {}
})


//START CREDIT LIST ACTIONS
// Opened product list actions
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetCreditActiveProductListPerform = (): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetActiveCreditProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetCreditActiveProductListRequest = (value: boolean): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {value,}
})

/*
    * Action dispatched on fetch succeeded in thunk "callGetActiveCreditProductList". Thunk dispatched by "Customer" screen. Fetch product list.
    *
    * @param {Models.CreditProductList} response Data received by fetch.
    */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.CreditProductList> }
export const callGetCreditActiveProductListSuccess = (response: Response<Models.CreditProductList>): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
    * Action dispatched on fetch failure in thunk "callGetActiveCreditProductList". Thunk dispatched by "Customer" screen. Fetch product list.
    *
    * @param {Error} error Description of error while receiving data by fetch.
    */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetCreditActiveProductListFailure = (error: Error): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
// Closed product list actions
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetCreditCloseProductListPerform = (): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCloseCreditProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetCreditCloseProductListRequest = (value: boolean): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {value,}
})

/*
    * Action dispatched on fetch succeeded in thunk "callGetCloseCreditProductList". Thunk dispatched by "Customer" screen. Fetch product list.
    *
    * @param {Models.CreditProductList} response Data received by fetch.
    */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.CreditProductList> }
export const callGetCreditCloseProductListSuccess = (response: Response<Models.CreditProductList>): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})
/*
    * Action dispatched on fetch failure in thunk "callGetCloseCreditProductList". Thunk dispatched by "Customer" screen. Fetch product list.
    *
    * @param {Error} error Description of error while receiving data by fetch.
    */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetCreditCloseProductListFailure = (error: Error): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
//END CREDIT LIST ACTIONS

//START CORPORATE_CARD LIST ACTIONS
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetCorporateCardActiveProductListPerform = (): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCorporateCardActiveProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetCorporateCardActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {value: isUpdating}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetCorporateCardActiveProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.CorporateCardProductList} response Data received by fetch.
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.CorporateCardProductList> }
export const callGetCorporateCardActiveProductListSuccess = (response: Response<Models.CorporateCardProductList>): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetCorporateCardActiveProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetCorporateCardActiveProductListFailure = (error: Error): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})


export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetCorporateCardCloseProductListPerform = (): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCorporateCardCloseProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetCorporateCardCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {value: isUpdating}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetCorporateCardCloseProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.CorporateCardProductList} response Data received by fetch.
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.CorporateCardProductList> }
export const callGetCorporateCardCloseProductListSuccess = (response: Response<Models.CorporateCardProductList>): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetCorporateCardCloseProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetCorporateCardCloseProductListFailure = (error: Error): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
//END CORPORATE_CARD LIST ACTIONS


//START ENCASHMENT_CONTRACT LIST ACTIONS
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetEncashmentContractActiveProductListPerform = (): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetEncashmentContractActiveProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetEncashmentContractActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {value: isUpdating}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetEncashmentContractActiveProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.EncashmentContractProductList} response Data received by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.EncashmentContractProductList> }
export const callGetEncashmentContractActiveProductListSuccess = (response: Response<Models.EncashmentContractProductList>): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetEncashmentContractActiveProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetEncashmentContractActiveProductListFailure = (error: Error): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})


export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetEncashmentContractCloseProductListPerform = (): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetEncashmentContractCloseProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetEncashmentContractCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {value: isUpdating}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetEncashmentContractCloseProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.EncashmentContractProductList} response Data received by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.EncashmentContractProductList> }
export const callGetEncashmentContractCloseProductListSuccess = (response: Response<Models.EncashmentContractProductList>): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetEncashmentContractCloseProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetEncashmentContractCloseProductListFailure = (error: Error): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
//END ENCASHMENT_CONTRACT LIST ACTIONS




//START SETTLEMENT_AGREEMENT LIST ACTIONS
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetSettlementAgreementActiveProductListPerform = (): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSettlementAgreementActiveProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetSettlementAgreementActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {value: isUpdating}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSettlementAgreementActiveProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SettlementAgreementProductList} response Data received by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.SettlementAgreementProductList> }
export const callGetSettlementAgreementActiveProductListSuccess = (response: Response<Models.SettlementAgreementProductList>): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSettlementAgreementActiveProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetSettlementAgreementActiveProductListFailure = (error: Error): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})


export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetSettlementAgreementCloseProductListPerform = (): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSettlementAgreementCloseProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetSettlementAgreementCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {value: isUpdating}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSettlementAgreementCloseProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SettlementAgreementProductList} response Data received by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.SettlementAgreementProductList> }
export const callGetSettlementAgreementCloseProductListSuccess = (response: Response<Models.SettlementAgreementProductList>): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSettlementAgreementCloseProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetSettlementAgreementCloseProductListFailure = (error: Error): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
//END SETTLEMENT_AGREEMENT LIST ACTIONS



//START DEPOSIT LIST ACTIONS
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetDepositActiveProductListPerform = (): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDepositProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetDepositActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetDepositProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DepositProductList} response Data received by fetch.
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.DepositProductList> }
export const callGetDepositActiveProductListSuccess = (response: Response<Models.DepositProductList>): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDepositProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetDepositActiveProductListFailure = (error: Error): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetDepositCloseProductListPerform = (): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDepositProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetDepositCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})
/*
 * Action dispatched on fetch succeeded in thunk "callGetDepositProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DepositProductList} response Data received by fetch.
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.DepositProductList> }
export const callGetDepositCloseProductListSuccess = (response: Response<Models.DepositProductList>): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDepositProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetDepositCloseProductListFailure = (error: Error): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})


//END DEPOSIT LIST ACTIONS


//START ACQUIRING LIST ACTIONS
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetAcquiringActiveProductListPerform = (): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetAcquiringProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetAcquiringActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetAcquiringProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.AcquiringProductList} response Data received by fetch.
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.AcquiringProductList> }
export const callGetAcquiringActiveProductListSuccess = (response: Response<Models.AcquiringProductList>): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetAcquiringProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetAcquiringActiveProductListFailure = (error: Error): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetAcquiringCloseProductListPerform = (): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetAcquiringProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetAcquiringCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})
/*
 * Action dispatched on fetch succeeded in thunk "callGetAcquiringProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.AcquiringProductList} response Data received by fetch.
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.AcquiringProductList> }
export const callGetAcquiringCloseProductListSuccess = (response: Response<Models.AcquiringProductList>): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetAcquiringProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetAcquiringCloseProductListFailure = (error: Error): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})


//END ACQUIRING LIST ACTIONS


//START DBO LIST ACTIONS
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetDboActiveProductListPerform = (): Action<CALL_GET_DBO_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDboProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetDboActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_DBO_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetDboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DboProductList} response Data received by fetch.
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.DboProductList> }
export const callGetDboActiveProductListSuccess = (response: Response<Models.DboProductList>): Action<CALL_GET_DBO_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetDboActiveProductListFailure = (error: Error): Action<CALL_GET_DBO_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetDboCloseProductListPerform = (): Action<CALL_GET_DBO_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDboProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetDboCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_DBO_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})
/*
 * Action dispatched on fetch succeeded in thunk "callGetDboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DboProductList} response Data received by fetch.
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.DboProductList> }
export const callGetDboCloseProductListSuccess = (response: Response<Models.DboProductList>): Action<CALL_GET_DBO_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetDboCloseProductListFailure = (error: Error): Action<CALL_GET_DBO_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})


//END DBO LIST ACTIONS

//START SALARY LIST ACTIONS
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetSalaryActiveProductListPerform = (): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSalaryProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetSalaryActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSalaryProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SalaryProductList} response Data received by fetch.
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.SalaryProductList> }
export const callGetSalaryActiveProductListSuccess = (response: Response<Models.SalaryProductList>): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSalaryProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetSalaryActiveProductListFailure = (error: Error): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetSalaryCloseProductListPerform = (): Action<CALL_GET_SALARY_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSalaryProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetSalaryCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_SALARY_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})
/*
 * Action dispatched on fetch succeeded in thunk "callGetSalaryProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SalaryProductList} response Data received by fetch.
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.SalaryProductList> }
export const callGetSalaryCloseProductListSuccess = (response: Response<Models.SalaryProductList>): Action<CALL_GET_SALARY_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSalaryProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetSalaryCloseProductListFailure = (error: Error): Action<CALL_GET_SALARY_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
//END SALARY LIST ACTIONS


//START UDBO LIST ACTIONS
/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_PERFORM = {}
export const callGetUdboActiveProductListPerform = (): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetUdboProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetUdboActiveProductListRequest = (isUpdating: boolean): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetUdboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.UdboProductList} response Data received by fetch.
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_SUCCESS = { response: Response<Models.UdboProductList> }
export const callGetUdboActiveProductListSuccess = (response: Response<Models.UdboProductList>): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetUdboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetUdboActiveProductListFailure = (error: Error): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_LIST_PERFORM = {}
export const callGetUdboCloseProductListPerform = (): Action<CALL_GET_UDBO_CLOSE_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetUdboProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetUdboCloseProductListRequest = (isUpdating: boolean): Action<CALL_GET_UDBO_CLOSE_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_LIST_REQUEST,
    payload: {
        value: isUpdating,
    }
})
/*
 * Action dispatched on fetch succeeded in thunk "callGetUdboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.UdboProductList} response Data received by fetch.
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_LIST_SUCCESS = { response: Response<Models.UdboProductList> }
export const callGetUdboCloseProductListSuccess = (response: Response<Models.UdboProductList>): Action<CALL_GET_UDBO_CLOSE_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetUdboProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetUdboCloseProductListFailure = (error: Error): Action<CALL_GET_UDBO_CLOSE_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})
//END UBDO LIST ACTIONS


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_LIST_PERFORM = {}
export const callGetLegalInfoProductList = (): Action<CALL_GET_LEGAL_INFO_PRODUCT_LIST_PERFORM> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_LIST_PERFORM,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetLegalInfoProductList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_LIST_REQUEST = {value: boolean}
export const callGetLegalInfoProductListRequest = (value: boolean): Action<CALL_GET_LEGAL_INFO_PRODUCT_LIST_REQUEST> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_LIST_REQUEST,
    payload: {value}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetLegalInfoProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.LegalInfoProductList} response Data received by fetch.
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_LIST_SUCCESS = { response: Response<Models.LegalInfoProductList> }
export const callGetLegalInfoProductListSuccess = (response: Response<Models.LegalInfoProductList>): Action<CALL_GET_LEGAL_INFO_PRODUCT_LIST_SUCCESS> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetLegalInfoProductList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_LIST_FAILURE = { error: Error }
export const callGetLegalInfoProductListFailure = (error: Error): Action<CALL_GET_LEGAL_INFO_PRODUCT_LIST_FAILURE> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_LIST_FAILURE,
    payload: {
        error: error
    }
})







/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetCreditActiveProductEksList = (): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCreditProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetCreditActiveProductEksListRequest = (): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetCreditProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.CreditProductList} response Data received by fetch.
 */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.CreditProductList> }
export const callGetCreditActiveProductEksListSuccess = (response: Response<Models.CreditProductList>): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetCreditProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetCreditActiveProductEksListFailure = (error: Error): Action<CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_CREDIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetCreditCloseProductEksList = (): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCreditProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetCreditCloseProductEksListRequest = (): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetCreditProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.CreditProductList} response Data received by fetch.
 */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.CreditProductList> }
export const callGetCreditCloseProductEksListSuccess = (response: Response<Models.CreditProductList>): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetCreditProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetCreditCloseProductEksListFailure = (error: Error): Action<CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_CREDIT_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetSettlementAgreementActiveProductEksList = (): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSettlementAgreementActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetSettlementAgreementActiveProductEksListRequest = (): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSettlementAgreementProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SettlementAgreementActiveProductList} response Data received by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.SettlementAgreementProductList> }
export const callGetSettlementAgreementActiveProductEksListSuccess = (response: Response<Models.SettlementAgreementProductList>): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSettlementAgreementProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetSettlementAgreementActiveProductEksListFailure = (error: Error): Action<CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetSettlementAgreementCloseProductEksList = (): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSettlementAgreementCLOSEProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetSettlementAgreementCloseProductEksListRequest = (): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSettlementAgreementProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SettlementAgreementCLOSEProductList} response Data received by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.SettlementAgreementProductList> }
export const callGetSettlementAgreementCloseProductEksListSuccess = (response: Response<Models.SettlementAgreementProductList>): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSettlementAgreementProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetSettlementAgreementCloseProductEksListFailure = (error: Error): Action<CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_SETTLEMENT_AGREEMENT_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetDepositActiveProductEksList = (): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDepositActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetDepositActiveProductEksListRequest = (): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetDepositActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DepositProductList} response Data received by fetch.
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.DepositProductList> }
export const callGetDepositActiveProductEksListSuccess = (response: Response<Models.DepositProductList>): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDepositActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetDepositActiveProductEksListFailure = (error: Error): Action<CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_DEPOSIT_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetDepositCloseProductEksList = (): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDepositCloseProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetDepositCloseProductEksListRequest = (): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetDepositCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DepositProductList} response Data received by fetch.
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.DepositProductList> }
export const callGetDepositCloseProductEksListSuccess = (response: Response<Models.DepositProductList>): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDepositCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetDepositCloseProductEksListFailure = (error: Error): Action<CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_DEPOSIT_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetCorporateCardActiveProductEksList = (): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCorporateCardActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetCorporateCardActiveProductEksListRequest = (): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetCorporateCardActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.CorporateCardProductList} response Data received by fetch.
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.CorporateCardProductList> }
export const callGetCorporateCardActiveProductEksListSuccess = (response: Response<Models.CorporateCardProductList>): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetCorporateCardCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetCorporateCardCloseProductEksListFailure = (error: Error): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetCorporateCardCloseProductEksList = (): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetCorporateCardCloseProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetCorporateCardCloseProductEksListRequest = (): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetCorporateCardCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.CorporateCardProductList} response Data received by fetch.
 */
export type CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.CorporateCardProductList> }
export const callGetCorporateCardCloseProductEksListSuccess = (response: Response<Models.CorporateCardProductList>): Action<CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_CORPORATE_CARD_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetCorporateCardActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetCorporateCardActiveProductEksListFailure = (error: Error): Action<CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_CORPORATE_CARD_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetEncashmentContractActiveProductEksList = (): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetEncashmentContractContractActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetEncashmentContractActiveProductEksListRequest = (): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetEncashmentContractActiveContractProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.EncashmentContractContractProductList} response Data received by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.EncashmentContractProductList> }
export const callGetEncashmentContractActiveProductEksListSuccess = (response: Response<Models.EncashmentContractProductList>): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetEncashmentContractActiveContractProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetEncashmentContractActiveProductEksListFailure = (error: Error): Action<CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetEncashmentContractCloseProductEksList = (): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetEncashmentContractContractCloseProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetEncashmentContractCloseProductEksListRequest = (): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetEncashmentContractCloseContractProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.EncashmentContractContractProductList} response Data received by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.EncashmentContractProductList> }
export const callGetEncashmentContractCloseProductEksListSuccess = (response: Response<Models.EncashmentContractProductList>): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetEncashmentContractCloseContractProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetEncashmentContractCloseProductEksListFailure = (error: Error): Action<CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_ENCASHMENT_CONTRACT_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST = {}
export const callGetLegalInfoProductEksList = (): Action<CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetLegalInfoProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetLegalInfoProductEksListRequest = (): Action<CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetLegalInfoProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.LegalInfoProductList} response Data received by fetch.
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.LegalInfoProductList> }
export const callGetLegalInfoProductEksListSuccess = (response: Response<Models.LegalInfoProductList>): Action<CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetLegalInfoProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetLegalInfoProductEksListFailure = (error: Error): Action<CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_LEGAL_INFO_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetAcquiringActiveProductEksList = (): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetAcquiringProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetAcquiringActiveProductEksListRequest = (): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetAcquiringProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.AcquiringProductList} response Data received by fetch.
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.AcquiringProductList> }
export const callGetAcquiringActiveProductEksListSuccess = (response: Response<Models.AcquiringProductList>): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetAcquiringProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetAcquiringActiveProductEksListFailure = (error: Error): Action<CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_ACQUIRING_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetAcquiringCloseProductEksList = (): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetAcquiringProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetAcquiringCloseProductEksListRequest = (): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetAcquiringProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.AcquiringProductList} response Data received by fetch.
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.AcquiringProductList> }
export const callGetAcquiringCloseProductEksListSuccess = (response: Response<Models.AcquiringProductList>): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetAcquiringProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetAcquiringCloseProductEksListFailure = (error: Error): Action<CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_ACQUIRING_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})



/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetDboActiveProductEksList = (): Action<CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDboActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetDboActiveProductEksListRequest = (): Action<CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetDboActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DboActiveProductList} response Data received by fetch.
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.DboProductList> }
export const callGetDboActiveProductEksListSuccess = (response: Response<Models.DboProductList>): Action<CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDboActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetDboActiveProductEksListFailure = (error: Error): Action<CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_DBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetDboCloseProductEksList = (): Action<CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetDboCloseProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetDboCloseProductEksListRequest = (): Action<CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetDboCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.DboCloseProductList} response Data received by fetch.
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.DboProductList> }
export const callGetDboCloseProductEksListSuccess = (response: Response<Models.DboProductList>): Action<CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetDboActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetDboCloseProductEksListFailure = (error: Error): Action<CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_DBO_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetUdboActiveProductEksList = (): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})
/**
 * Action dispatched on network thunk chain "callGetUdboActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetUdboActiveProductEksListRequest = (): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetUdboActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.UdboProductList} response Data received by fetch.
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.UdboProductList> }
export const callGetUdboActiveProductEksListSuccess = (response: Response<Models.UdboProductList>): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetUdboActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetUdboActiveProductEksListFailure = (error: Error): Action<CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_UDBO_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetUdboCloseProductEksList = (): Action<CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetUdboCloseProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetUdboCloseProductEksListRequest = (): Action<CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetUdboCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.UdboProductList} response Data received by fetch.
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.UdboProductList> }
export const callGetUdboCloseProductEksListSuccess = (response: Response<Models.UdboProductList>): Action<CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetUdboCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetUdboCloseProductEksListFailure = (error: Error): Action<CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_UDBO_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST = {}
export const callGetSalaryActiveProductEksList = (): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSalaryActiveProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetSalaryActiveProductEksListRequest = (): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSalaryActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SalaryProductList} response Data received by fetch.
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.SalaryProductList> }
export const callGetSalaryActiveProductEksListSuccess = (response: Response<Models.SalaryProductList>): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSalaryActiveProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetSalaryActiveProductEksListFailure = (error: Error): Action<CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_SALARY_ACTIVE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})



/**
 * Thunk dispatched by "Customer" screen. Fetch product list.
 *
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST = {}
export const callGetSalaryCloseProductEksList = (): Action<CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST,
    payload: {}
})

/**
 * Action dispatched on network thunk chain "callGetSalaryCloseProductEksList" started. Thunk dispatched by "Customer" screen. Fetch product list.
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_REQUEST = {}
export const callGetSalaryCloseProductEksListRequest = (): Action<CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_REQUEST> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_REQUEST,
    payload: {}
})

/*
 * Action dispatched on fetch succeeded in thunk "callGetSalaryCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Models.SalaryProductList} response Data received by fetch.
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_SUCCESS = { response: Response<Models.SalaryProductList> }
export const callGetSalaryCloseProductEksListSuccess = (response: Response<Models.SalaryProductList>): Action<CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_SUCCESS> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/*
 * Action dispatched on fetch failure in thunk "callGetSalaryCloseProductEksList". Thunk dispatched by "Customer" screen. Fetch product list.
 *
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_FAILURE = { error: Error }
export const callGetSalaryCloseProductEksListFailure = (error: Error): Action<CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_FAILURE> => ({
    type: CALL_GET_SALARY_CLOSE_PRODUCT_EKS_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to include company to Customer.
 *
 */
export type NAVIGATE_TO_CUSTOMER_ACTIVITY_INCLUDE_SCREEN = {}
export const navigateToCustomerActivityIncludeScreen = (): Action<NAVIGATE_TO_CUSTOMER_ACTIVITY_INCLUDE_SCREEN> => ({
    type: NAVIGATE_TO_CUSTOMER_ACTIVITY_INCLUDE_SCREEN,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to exclude company from Customer.
 *
 */
export type NAVIGATE_TO_CUSTOMER_ACTIVITY_EXCLUDE_SCREEN = {}
export const navigateToCustomerActivityExcludeScreen = (): Action<NAVIGATE_TO_CUSTOMER_ACTIVITY_EXCLUDE_SCREEN> => ({
    type: NAVIGATE_TO_CUSTOMER_ACTIVITY_EXCLUDE_SCREEN,
    payload: {}
})

export type NAVIGATE_TO_CUSTOMER_ACTIVITY_ACCESS_SCREEN = {}
export const navigateToCustomerActivityAccessScreen = (): Action<NAVIGATE_TO_CUSTOMER_ACTIVITY_ACCESS_SCREEN> => ({
    type: NAVIGATE_TO_CUSTOMER_ACTIVITY_ACCESS_SCREEN,
    payload: {}
})

export type NAVIGATE_BACK_FROM_CUSTOMER_ACTIVITY_ACCESS_SCREEN = {}
export const navigateBackFromCustomerActivityAccessScreen = (): Action<NAVIGATE_BACK_FROM_CUSTOMER_ACTIVITY_ACCESS_SCREEN> => ({
    type: NAVIGATE_BACK_FROM_CUSTOMER_ACTIVITY_ACCESS_SCREEN,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk chain used to close Gsz activity.
 *
 */
export type CLOSE_CUSTOMER_ACTIVITY_PANEL = {}
export const closeCustomerActivityPanel = (): Action<CLOSE_CUSTOMER_ACTIVITY_PANEL> => ({
    type: CLOSE_CUSTOMER_ACTIVITY_PANEL,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen. Thunk dispatched to reset container state to default values.
 *
 */
export type PERFORM_CONTAINER_RESET = {}
export const performContainerReset = (): Action<PERFORM_CONTAINER_RESET> => ({
    type: PERFORM_CONTAINER_RESET,
    payload: {}
})

/**
 * Thunk dispatched by "ProductCredit" screen. Thunk dispatched to reset container state to default values.
 *
 */
export type CALL_GET_FORECAST_DEAL_LIST = {}
export const callGetForecastDealList = (): Action<CALL_GET_FORECAST_DEAL_LIST> => ({
    type: CALL_GET_FORECAST_DEAL_LIST,
    payload: {}
})

/**
 * Thunk dispatched by "ProductCredit" screen. Thunk dispatched to get request event list.
 *
 */
export type CALL_GET_FORECAST_DEAL_LIST_REQUEST = {}
export const callGetForecastDealListRequest = (): Action<CALL_GET_FORECAST_DEAL_LIST_REQUEST> => ({
    type: CALL_GET_FORECAST_DEAL_LIST_REQUEST,
    payload: {}
})

/**
 * Action dispatched on fetch succeeded in thunk "callGetForecastDealList". Fetch forecast list.
 *
 * @param {Models.ForecastDealList} response Data received by fetch.
 */
export type CALL_GET_FORECAST_DEAL_LIST_SUCCESS = { response: Response<Models.ForecastDealList> }
export const callGetForecastDealListSuccess = (response: Response<Models.ForecastDealList>): Action<CALL_GET_FORECAST_DEAL_LIST_SUCCESS> => ({
    type: CALL_GET_FORECAST_DEAL_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/**
 * Action dispatched on fetch succeeded in thunk "callGetForecastDealList". Fetch forecast list.
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_FORECAST_DEAL_LIST_FAILURE = { error: Models.Error }
export const callGetForecastDealListFailure = (error: Models.Error): Action<CALL_GET_FORECAST_DEAL_LIST_FAILURE> => ({
    type: CALL_GET_FORECAST_DEAL_LIST_FAILURE,
    payload: {
        error: error
    }
})

/**
 * Thunk dispatched by "ProductCredit" screen. Thunk dispatched to reset container state to default values.
 *
 */
export type CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST = {}
export const callGetForecastPrognosticDealList = (): Action<CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST> => ({
    type: CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST,
    payload: {}
})

/**
 * Thunk dispatched by "ProductCredit" screen. Thunk dispatched to get request event list.
 *
 */
export type CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_REQUEST = {}
export const callGetForecastPrognosticDealListRequest = (): Action<CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_REQUEST> => ({
    type: CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_REQUEST,
    payload: {}
})

/**
 * Action dispatched on fetch succeeded in thunk "callGetForecastPrognosticDealList". Fetch forecast list.
 *
 * @param {Models.ForecastDealList} response Data received by fetch.
 */
export type CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_SUCCESS = { response: Response<Models.ForecastDealList> }
export const callGetForecastPrognosticDealListSuccess = (response: Response<Models.ForecastDealList>): Action<CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_SUCCESS> => ({
    type: CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_SUCCESS,
    payload: {
        response: response
    }
})

/**
 * Action dispatched on fetch succeeded in thunk "callGetForecastPrognosticDealList". Fetch forecast list.
 * @param {Error} error Description of error while receiving data by fetch.
 */
export type CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_FAILURE = { error: Models.Error }
export const callGetForecastPrognosticDealListFailure = (error: Models.Error): Action<CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_FAILURE> => ({
    type: CALL_GET_FORECAST_PROGNOSTIC_DEAL_LIST_FAILURE,
    payload: {
        error: error
    }
})


/**
 * Thunk dispatched by "Customer" screen. Thunk used to navigate to employee screen.
 */
export type NAVIGATE_TO_EMPLOYEE_VIEW_SCREEN = {}
export const navigateToEmployeeViewScreen = (): Action<NAVIGATE_TO_EMPLOYEE_VIEW_SCREEN> => ({
    type: NAVIGATE_TO_EMPLOYEE_VIEW_SCREEN,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen.
 * Thunk used to delete the last element from customer navigation history.
 */
export type NAVIGATION_HISTORY_POP = {mode: Enums.CustomerMode}
export const navigationHistoryPop = (mode: Enums.CustomerMode): Action<NAVIGATION_HISTORY_POP> => ({
    type: NAVIGATION_HISTORY_POP,
    payload: {
        mode
    }
})

/**
 * Thunk dispatched by "Customer" screen.
 * Thunk used to hide prognostic product list alert.
 */
export type PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_HIDE = {}
export const performPrognosticProductListModalAlertHide = (): Action<PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_HIDE> => ({
    type: PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_HIDE,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen.
 *  Thunk used to show prognostic product list alert.
 */
export type PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_SHOW = {}
export const performPrognosticProductListModalAlertShow = (): Action<PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_SHOW> => ({
    type: PERFORM_PROGNOSTIC_PRODUCT_LIST_MODAL_ALERT_SHOW,
    payload: {}
})

/**
 * Thunk dispatched by "Customer" screen.
 *  Thunk used to show set activity access error.
 */
export type PERFORM_SET_ACTIVITY_ACCESS_ERROR = {isActivityAccessError: boolean}
export const performSetActivityAccessError = (isActivityAccessError: boolean): Action<PERFORM_SET_ACTIVITY_ACCESS_ERROR> => ({
    type: PERFORM_SET_ACTIVITY_ACCESS_ERROR,
    payload: {isActivityAccessError}
})