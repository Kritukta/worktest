import { defaultValues } from "./Models";
import { Enums } from '../Enums';
const defaultState = {
    get state() {
        return {
            currentStageStatus: initialCurrentStageStatus,
            currentDeal: defaultValues.Deal,
            currentCustomerManaged: defaultValues.CustomerManaged,
            stageList: [],
            selectedStage: defaultValues.dealStage,
            activePosition: -1,
            crmStages: defaultValues.EmptyList,
            isAccessibleStages: true,
            progress: 0,
            system: null,
            isReadOnlyStages: false,
            inputDealDate: null,
            inputRejection: defaultValues.Classifier,
            inputCurrency: null,
            inputEquivalentSumString: null,
            inputEquivalentSum: null,
            isInputDealDateEnable: true,
            currentStageTab: 0,
            isRejection: true,
            accessibleStageList: defaultValues.ClassifierList,
            isVisiblePopoverClientRoadMapHelp: false,
            isVisiblePopoverClientRoadMap: false,
            receivingInputParametersInProgress: true,
            receivingInputParametersError: null,
            saveDealAdditionalFieldsInProgress: false,
            saveDealAdditionalFieldsError: null,
            saveDealStageInProgress: false,
            saveDealStageError: null,
            isErrorEnable: false,
            isSaveStageEnable: false,
            inputEmployeeSource: Enums.MemberListEmployeeSource.Employee,
            dealStageTracking: defaultValues.dealStageTracking,
            dealStageTrackingFetching: false,
            dealStageTrackingError: null,
            dealStagesTrackingUpdateFetching: false,
            dealStagesTrackingUpdateError: null,
            dealPossibleStageList: defaultValues.dealPossibleStageList,
            dealPossibleStageListFetching: false,
            dealPossibleStageListError: null,
            dealHistoryStageList: defaultValues.dealHistoryStageList,
            dealHistoryStageListFetching: false,
            dealHistoryStageListError: null,
            dealStagesUpdateFetching: false,
            dealStagesUpdateError: null,
            dealUpdateFetching: false,
            dealUpdateError: null,
            currentDealFetching: false,
            currentDealError: null,
            inputStage: defaultValues.Classifier,
            errorMessage: '',
            mainErrorMessage: '',
            secondaryErrorMessage: '',
            isSetMainClientManager: false,
            isSetMainCreditOfficer: false,
            isSetMemberMonitoring: false,
            isSetPlannedFinishDate: false,
            isSetCloseReason: false,
            isSetCurrency: false,
            isSetClientStageChanges: false,
            isSaveAdditionalFieldsEnable: false,
            isButtonPopoverOpenedMainClientManager: false,
            isButtonPopoverOpenedMainCreditOfficer: false,
            isButtonPopoverOpenedMemberMonitoring: false,
            isDealStagesSavePopoverOpened: false,
            inputMainClientManager: null,
            inputMainCreditOfficer: null,
            inputMemberMonitoring: null,
            inputMemberList: null,
            inputComment: '',
            isStageListEnable: false,
            operationUuid: null,
        };
    }
};
export const initialCurrentStageStatus = {
    stageStatus: Enums.StageStatus.Default,
    isDisabled: false,
    isSelected: false,
    history: defaultValues.historyStage,
    stageText: '',
};
export const initialState = {
    get state() {
        return defaultState.state;
    }
};
//# sourceMappingURL=ModelsDealStages.js.map