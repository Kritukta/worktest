import * as ModelState from "../models/Models";
import { Models } from 'mrmkmcib-crm';
import { Enums } from '../Enums';
import Error from "../models/Error";
export declare const performFlush: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performOpenAgentListScreen: (agentList: Models.AgentList, customerManaged: Models.CustomerManaged, currentDeal: Models.Deal | null, agentListContextMode: Enums.AgentListContextMode, agentListAccessLevel: Enums.AgentListAccessLevel) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputAgentList: (agentList: Models.AgentList) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const getAgentListContextRequestString: (agentListContext: Enums.AgentListContextMode, reducerState: ModelState.IRootState) => string;
export declare const callGetAgentList: (id: string) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performAgentDelete: (agent: Models.Agent) => (dispatch: Function) => void;
export declare const performOpenAgentDeletePanel: (agent: Models.Agent) => (dispatch: Function) => void;
export declare const performCloseAgentDeletePanel: (agent: Models.Agent) => (dispatch: Function) => void;
export declare const navigateToPrincipalPickerScreen: () => (dispatch: Function) => void;
export declare const performAgentListPrincipal: (agentId: string, isPrincipal: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToAgentSearchScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputAgentSearch: (value: string) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const parseInputString: (inputString: string) => Models.AgentSearchListRequestPerson | null;
export declare const callGetAgentSearchList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performAgentSearchListSelect: (agent: Models.Agent) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToAgentPositionListScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputAgentJobPosition: (value: string) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSelectAgentJobPosition: (value: string) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performUpdateAgentList: (agent: Models.Agent, agentMode?: Enums.AgentMode) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCancelSearchAgent: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performMenuAgentAddShow: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performMenuAgentAddHide: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callCustomerAgentListUpdateRequest: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callPutDealAgentListUpdate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callGetDealRefresh: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSave: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSaveSuccess: (dealResponse: Models.Deal | null) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSaveFailure: (error: Error) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performEdit: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performPopoverAddHide: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performPopoverAddShow: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCancel: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCloseAgentListScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performChangeDisplayAgentListErrorModalWindow: (status: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performContainerReset: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performOpenAgentScreen: (agent: Models.Agent, agentMode: Enums.AgentMode, agentContextMode: Enums.AgentContextMode) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInit: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
