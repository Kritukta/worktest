import * as ModelState from "../models/Models";
import { Models as ModelsApp } from 'mrmkmcib-app';
import { Models } from "mrmkmcib-crm";
import { Enums } from '../Enums';
import Error from "../models/Error";
export declare const performFlush: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const getSupParameters: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterSelectStage: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: ModelsApp.Classifier) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterSelectRole: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: ModelsApp.Classifier) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterSelectCurrency: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: ModelsApp.Classifier) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterSelectDateFrom: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: Date) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterSelectDateTo: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: Date) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performChangeTab: (index: number, value: Enums.DealListTab) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performPopoverFilterShow: (currentTab: Enums.DealListTab) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performPopoverFilterHide: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterApply: (currentTab: Enums.DealListTab) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterReset: (currentTab: Enums.DealListTab) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterSelectProduct: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: ModelsApp.Classifier) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performFilterUnSelectProduct: (currentTab: Enums.DealListTab, filterData: Models.DealListFilter, value: ModelsApp.Classifier) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputFilterValue: (value: Models.DealListFilter, currentTab: Enums.DealListTab) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateToStage: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateToRole: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateToProduct: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateToCurrency: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateToDateFrom: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterPopoverNavigateToDateTo: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performDealListRefresh: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performDealListRefreshSuccess: (data: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performDealListRefreshFailure: (error: Error) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const refresh_callGetDealList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const refresh_dealListConcat: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const dealListReduce: (currentUser: ModelsApp.Employee) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performDealCreate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performContainerReset: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const startRowAnimation: (value: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const catchDealListReady: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
