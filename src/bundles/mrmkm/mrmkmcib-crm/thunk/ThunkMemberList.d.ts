import * as ModelState from "../models/Models";
import { Models as ModelsApp } from "mrmkmcib-app";
import { Models } from "mrmkmcib-crm";
import { Models as ModelsScheduler } from "mrmkmcib-scheduler";
import { Enums } from '../Enums';
import Error from "../models/Error";
export declare const performMemberListRefresh: (currentActivity: ModelsScheduler.Activity, currentDeal: Models.Deal, currentCustomerManaged: Models.CustomerManaged, currentGsz: Models.Gsz, currentAgent: Models.Agent, isExpandedMode: boolean, currentMode: Enums.MemberListMode, inputEmployeeSource?: Enums.MemberListEmployeeSource | undefined) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const setEditingPermissionMemberList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateBackFromMembersSearchPage: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateSearchMemberListScreenBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const swapContext: (memberList: Models.MemberList) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSetEditorEnabled: (isEnabled: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performEdit: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCancel: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performPopoverAddShow: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performPopoverAddHide: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToMemberSearchScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToMemberSearchLocalScreen: (employeeSource: Enums.MemberListEmployeeSource, isSelectEmployeeLocalSearch: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateMemberListScreenBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputMemberSearch: (value: string) => (dispatch: Function) => void;
export declare const performSearch: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performResetMemberSearchList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputMemberSearchLocal: (value: string) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const filterMemberSearchListLocal: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callGetMemberSearchList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToMemberRolePickerScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performMemberSearchListSelect: (member: ModelsApp.Employee) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSelectGeneralMember: (index: number) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToSelectMemberIsGeneralScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const getSupParameters: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performMemberRoleSelect: (role: ModelsApp.Classifier) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToMemberListScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSave: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callPutActivityMemberListUpdate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSaveActivityMemberList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callPutDealMemberListUpdate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callGetDealMemberListRefresh: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callPutAgentMemberListUpdate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSaveSuccess: (data: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callPutMemberListUpdate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callGetCustomerModifierId: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSaveFailure: (error: Error) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performMemberDelete: (index: number) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performMemberActionMenuSwitch: (id: string, isLeftActionMenuOpen: boolean, isRightActionMenuOpen: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateBack: () => (dispatch: Function) => void;
export declare const performResetAndReturn: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateGszActivityIncludeExcludeBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const setInfoButtonFlag: (flag: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performNavigateToMemberScreen: (memberId: string) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSetMemberSearchList: (data: Models.MemberList) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSetMemberSearchListEmpty: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const setLocalSearchFlag: (isLocalSearch: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputEmployeeSourceActivity: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callGetCustomerForActivity: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputEmployeeSource: (inputEmployeeSource: Enums.MemberListEmployeeSource) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateToActivityBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const swapContextMemberListToActivity: (memberList: Models.MemberList) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performContainerReset: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCancelSaveMemberListError: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSetDealCardOwner: (isDealCardOwner: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
