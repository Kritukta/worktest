import * as ModelState from "../models/Models";
import { Models } from "mrmkmcib-crm";
import { Enums } from '../Enums';
import Response from "../models/Response";
export declare const performInit: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performChangeDisplayOccasionListErrorModalWindow: (value: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSave: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callUpdateRequestCustomerOccasionList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callUpdateSuccessOccasionList: (response: Response<Models.ResponsePostPutRequest>) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callUpdateFailureOccasionList: (error: Models.Error) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const callUpdateRequestAgentOccasionList: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCallOccasionListUpdate: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performEdit: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCancel: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performInputOccasionList: (occasionList: Models.OccasionList) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const navigateBack: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performCloseOccasionListScreen: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performUpdateOccasionList: (occasionList: Models.OccasionList) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performOpenOccasionScreen: (occasion: Models.Occasion, occasionMode: Enums.OccasionMode) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performOpenOccasionListScreen: (occasionList: Models.OccasionList, occasionListConfig: Models.OccasionListConfig) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const changeStatusNeedUpdateOccasionList: (hasChangedOccasionList: boolean) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performDeleteOccasionWithMenuOption: (occasion: Models.Occasion) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performAddOccasionWithMenuOption: (occasion: Models.Occasion) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performDeleteOccasion: (occasion: Models.Occasion) => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const openOccasionListPanel: () => (dispatch: Function) => void;
export declare const performContainerReset: () => (dispatch: Function, getState: () => ModelState.IRootState) => void;
export declare const performSetOccasionListAccessLevel: (value: Enums.OccasionListAccessLevel) => (dispatch: Function) => void;
